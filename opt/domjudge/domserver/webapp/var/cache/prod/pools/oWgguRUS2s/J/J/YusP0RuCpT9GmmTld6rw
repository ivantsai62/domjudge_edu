<?php

namespace Symfony\Component\VarExporter\Internal;

return $getExpiry ? PHP_INT_MAX : Hydrator::hydrate(
    $o = [
        clone (($p = &Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
        clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\Event',
            ],
            'namespace' => [
                'App\\Entity',
            ],
            'rootEntityName' => [
                'App\\Entity\\Event',
            ],
            'identifier' => [
                [
                    'eventid',
                ],
            ],
            'generatorType' => [
                4,
            ],
            'fieldMappings' => [
                [
                    'eventid' => [
                        'fieldName' => 'eventid',
                        'type' => 'integer',
                        'scale' => 0,
                        'length' => 4,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => 0,
                        'options' => [
                            'comment' => 'Event ID',
                            'unsigned' => true,
                        ],
                        'columnName' => 'eventid',
                        'id' => true,
                    ],
                    'eventtime' => [
                        'fieldName' => 'eventtime',
                        'type' => 'decimal',
                        'scale' => 9,
                        'length' => null,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => 32,
                        'options' => [
                            'comment' => 'When the event occurred',
                            'unsigned' => true,
                        ],
                        'columnName' => 'eventtime',
                    ],
                    'endpointtype' => [
                        'fieldName' => 'endpointtype',
                        'type' => 'string',
                        'scale' => 0,
                        'length' => 32,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => 0,
                        'options' => [
                            'comment' => 'API endpoint associated to this entry',
                        ],
                        'columnName' => 'endpointtype',
                    ],
                    'endpointid' => [
                        'fieldName' => 'endpointid',
                        'type' => 'string',
                        'scale' => 0,
                        'length' => 64,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => 0,
                        'options' => [
                            'comment' => 'API endpoint (external) ID',
                        ],
                        'columnName' => 'endpointid',
                    ],
                    'action' => [
                        'fieldName' => 'action',
                        'type' => 'string',
                        'scale' => 0,
                        'length' => 32,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => 0,
                        'options' => [
                            'comment' => 'Description of action performed',
                        ],
                        'columnName' => 'action',
                    ],
                    'content' => [
                        'fieldName' => 'content',
                        'type' => 'binaryjson',
                        'scale' => 0,
                        'length' => null,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => 0,
                        'options' => [
                            'comment' => 'JSON encoded content of the change, as provided in the event feed',
                        ],
                        'columnName' => 'content',
                    ],
                    'cid' => [
                        'fieldName' => 'cid',
                        'type' => 'integer',
                        'scale' => 0,
                        'length' => 4,
                        'unique' => false,
                        'nullable' => false,
                        'precision' => 0,
                        'options' => [
                            'comment' => 'Contest ID',
                            'unsigned' => true,
                        ],
                        'columnName' => 'cid',
                    ],
                ],
            ],
            'fieldNames' => [
                [
                    'eventid' => 'eventid',
                    'eventtime' => 'eventtime',
                    'endpointtype' => 'endpointtype',
                    'endpointid' => 'endpointid',
                    'action' => 'action',
                    'content' => 'content',
                    'cid' => 'cid',
                ],
            ],
            'columnNames' => [
                [
                    'eventid' => 'eventid',
                    'eventtime' => 'eventtime',
                    'endpointtype' => 'endpointtype',
                    'endpointid' => 'endpointid',
                    'action' => 'action',
                    'content' => 'content',
                    'cid' => 'cid',
                ],
            ],
            'table' => [
                [
                    'name' => 'event',
                    'indexes' => [
                        'eventtime' => [
                            'columns' => [
                                'cid',
                                'eventtime',
                            ],
                        ],
                        'cid' => [
                            'columns' => [
                                'cid',
                            ],
                        ],
                        'endpoint' => [
                            'columns' => [
                                'cid',
                                'endpointtype',
                                'endpointid',
                            ],
                        ],
                    ],
                    'options' => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Log of all events during a contest',
                    ],
                ],
            ],
            'associationMappings' => [
                [
                    'contest' => [
                        'fieldName' => 'contest',
                        'joinColumns' => [
                            [
                                'name' => 'cid',
                                'unique' => false,
                                'nullable' => true,
                                'onDelete' => 'CASCADE',
                                'columnDefinition' => null,
                                'referencedColumnName' => 'cid',
                            ],
                        ],
                        'cascade' => [],
                        'inversedBy' => 'problems',
                        'targetEntity' => 'App\\Entity\\Contest',
                        'fetch' => 2,
                        'type' => 2,
                        'mappedBy' => null,
                        'isOwningSide' => true,
                        'sourceEntity' => 'App\\Entity\\Event',
                        'isCascadeRemove' => false,
                        'isCascadePersist' => false,
                        'isCascadeRefresh' => false,
                        'isCascadeMerge' => false,
                        'isCascadeDetach' => false,
                        'sourceToTargetKeyColumns' => [
                            'cid' => 'cid',
                        ],
                        'joinColumnFieldNames' => [
                            'cid' => 'cid',
                        ],
                        'targetToSourceKeyColumns' => [
                            'cid' => 'cid',
                        ],
                        'orphanRemoval' => false,
                    ],
                ],
            ],
            'idGenerator' => [
                $o[1],
            ],
        ],
    ],
    $o[0],
    []
);
