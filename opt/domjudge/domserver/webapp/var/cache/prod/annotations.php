<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'DoctrineNamespaceCacheKey%5B%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23setContainer%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getParameter%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getSubscribedServices%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23has%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23get%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23generateUrl%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23forward%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirect%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirectToRoute%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23json%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23file%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addFlash%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isGranted%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23denyAccessUnlessGranted%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderView%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23render%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23stream%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createNotFoundException%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createAccessDeniedException%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createForm%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createFormBuilder%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getDoctrine%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getUser%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isCsrfTokenValid%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23dispatchMessage%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addLink%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%24container%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23performListAction%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23performSingleAction%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23renderData%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23getContestQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23getContestId%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23getContestIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%23getIdField%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%23getViewHandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%23getSubscribedServices%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%23setViewHandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%23view%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%23redirectView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%23routeRedirectView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%23handleView%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAbstractRestController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAwardsController%5D%5B1%5D' => 2,
'%5BApp%5CController%5CAPI%5CAwardsController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAwardsController%23listAction%5D%5B1%5D' => 3,
'%5BApp%5CController%5CAPI%5CAwardsController%23singleAction%5D%5B1%5D' => 4,
'%5BApp%5CController%5CAPI%5CAwardsController%23getAwardsData%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAwardsController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAwardsController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CAwardsController%24scoreboardService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CClarificationController%5D%5B1%5D' => 5,
'%5BApp%5CController%5CAPI%5CClarificationController%23listAction%5D%5B1%5D' => 6,
'%5BApp%5CController%5CAPI%5CClarificationController%23singleAction%5D%5B1%5D' => 7,
'%5BApp%5CController%5CAPI%5CClarificationController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CClarificationController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CContestController%5D%5B1%5D' => 8,
'%5BApp%5CController%5CAPI%5CContestController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CContestController%23addContestAction%5D%5B1%5D' => 9,
'%5BApp%5CController%5CAPI%5CContestController%23listAction%5D%5B1%5D' => 10,
'%5BApp%5CController%5CAPI%5CContestController%23singleAction%5D%5B1%5D' => 11,
'%5BApp%5CController%5CAPI%5CContestController%23changeStartTimeAction%5D%5B1%5D' => 12,
'%5BApp%5CController%5CAPI%5CContestController%23getContestYamlAction%5D%5B1%5D' => 13,
'%5BApp%5CController%5CAPI%5CContestController%23getContestStateAction%5D%5B1%5D' => 14,
'%5BApp%5CController%5CAPI%5CContestController%23getEventFeedAction%5D%5B1%5D' => 15,
'%5BApp%5CController%5CAPI%5CContestController%23getStatusAction%5D%5B1%5D' => 16,
'%5BApp%5CController%5CAPI%5CContestController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CContestController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CContestController%23getContestWithId%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CContestController%24importExportService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CExecutableController%5D%5B1%5D' => 17,
'%5BApp%5CController%5CAPI%5CExecutableController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CExecutableController%23singleAction%5D%5B1%5D' => 18,
'%5BApp%5CController%5CAPI%5CExecutableController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%5D%5B1%5D' => 19,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%23getVersionAction%5D%5B1%5D' => 20,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%23getInfoAction%5D%5B1%5D' => 21,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%23getStatusAction%5D%5B1%5D' => 22,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%23getUserAction%5D%5B1%5D' => 23,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%23getDatabaseConfigurationAction%5D%5B1%5D' => 24,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%23getConfigCheckAction%5D%5B1%5D' => 25,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%23getContestIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%24apiVersion%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%24checkConfigService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGeneralInfoController%24router%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGroupController%5D%5B1%5D' => 26,
'%5BApp%5CController%5CAPI%5CGroupController%23listAction%5D%5B1%5D' => 27,
'%5BApp%5CController%5CAPI%5CGroupController%23singleAction%5D%5B1%5D' => 28,
'%5BApp%5CController%5CAPI%5CGroupController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CGroupController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%5D%5B1%5D' => 29,
'%5BApp%5CController%5CAPI%5CJudgehostController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%23getJudgehostsAction%5D%5B1%5D' => 30,
'%5BApp%5CController%5CAPI%5CJudgehostController%23createJudgehostAction%5D%5B1%5D' => 31,
'%5BApp%5CController%5CAPI%5CJudgehostController%23updateJudgeHostAction%5D%5B1%5D' => 32,
'%5BApp%5CController%5CAPI%5CJudgehostController%23getNextJudgingAction%5D%5B1%5D' => 33,
'%5BApp%5CController%5CAPI%5CJudgehostController%23updateJudgingAction%5D%5B1%5D' => 34,
'%5BApp%5CController%5CAPI%5CJudgehostController%23addJudgingRunAction%5D%5B1%5D' => 35,
'%5BApp%5CController%5CAPI%5CJudgehostController%23addMultipleJudgingRuns%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%23internalErrorAction%5D%5B1%5D' => 36,
'%5BApp%5CController%5CAPI%5CJudgehostController%23giveBackJudging%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%23addSingleJudgingRun%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%24scoreboardService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%24submissionService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%24balloonService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgehostController%24logger%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgementController%5D%5B1%5D' => 37,
'%5BApp%5CController%5CAPI%5CJudgementController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgementController%23listAction%5D%5B1%5D' => 38,
'%5BApp%5CController%5CAPI%5CJudgementController%23singleAction%5D%5B1%5D' => 39,
'%5BApp%5CController%5CAPI%5CJudgementController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgementController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgementController%23transformObject%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgementController%24verdicts%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgementTypeController%5D%5B1%5D' => 40,
'%5BApp%5CController%5CAPI%5CJudgementTypeController%23listAction%5D%5B1%5D' => 41,
'%5BApp%5CController%5CAPI%5CJudgementTypeController%23singleAction%5D%5B1%5D' => 42,
'%5BApp%5CController%5CAPI%5CJudgementTypeController%23getJudgementTypes%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgementTypeController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CJudgementTypeController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CLanguageController%5D%5B1%5D' => 43,
'%5BApp%5CController%5CAPI%5CLanguageController%23listAction%5D%5B1%5D' => 44,
'%5BApp%5CController%5CAPI%5CLanguageController%23singleAction%5D%5B1%5D' => 45,
'%5BApp%5CController%5CAPI%5CLanguageController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CLanguageController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5COrganizationController%5D%5B1%5D' => 46,
'%5BApp%5CController%5CAPI%5COrganizationController%23listAction%5D%5B1%5D' => 47,
'%5BApp%5CController%5CAPI%5COrganizationController%23singleAction%5D%5B1%5D' => 48,
'%5BApp%5CController%5CAPI%5COrganizationController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5COrganizationController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CProblemController%5D%5B1%5D' => 49,
'%5BApp%5CController%5CAPI%5CProblemController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CProblemController%23listAction%5D%5B1%5D' => 50,
'%5BApp%5CController%5CAPI%5CProblemController%23addProblemAction%5D%5B1%5D' => 51,
'%5BApp%5CController%5CAPI%5CProblemController%23singleAction%5D%5B1%5D' => 52,
'%5BApp%5CController%5CAPI%5CProblemController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CProblemController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CProblemController%23transformObject%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CProblemController%24importProblemService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CQueryObjectTransformer%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CQueryObjectTransformer%23transformObject%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CRunController%5D%5B1%5D' => 53,
'%5BApp%5CController%5CAPI%5CRunController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CRunController%23listAction%5D%5B1%5D' => 54,
'%5BApp%5CController%5CAPI%5CRunController%23singleAction%5D%5B1%5D' => 55,
'%5BApp%5CController%5CAPI%5CRunController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CRunController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CRunController%23transformObject%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CRunController%24verdicts%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CScoreboardController%5D%5B1%5D' => 56,
'%5BApp%5CController%5CAPI%5CScoreboardController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CScoreboardController%23getScoreboardAction%5D%5B1%5D' => 57,
'%5BApp%5CController%5CAPI%5CScoreboardController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CScoreboardController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CScoreboardController%24scoreboardService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CSubmissionController%5D%5B1%5D' => 58,
'%5BApp%5CController%5CAPI%5CSubmissionController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CSubmissionController%23listAction%5D%5B1%5D' => 59,
'%5BApp%5CController%5CAPI%5CSubmissionController%23singleAction%5D%5B1%5D' => 60,
'%5BApp%5CController%5CAPI%5CSubmissionController%23addSubmissionAction%5D%5B1%5D' => 61,
'%5BApp%5CController%5CAPI%5CSubmissionController%23getSubmissionFilesAction%5D%5B1%5D' => 62,
'%5BApp%5CController%5CAPI%5CSubmissionController%23getSubmissionSourceCodeAction%5D%5B1%5D' => 63,
'%5BApp%5CController%5CAPI%5CSubmissionController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CSubmissionController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CSubmissionController%24submissionService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CTeamController%5D%5B1%5D' => 64,
'%5BApp%5CController%5CAPI%5CTeamController%23listAction%5D%5B1%5D' => 65,
'%5BApp%5CController%5CAPI%5CTeamController%23singleAction%5D%5B1%5D' => 66,
'%5BApp%5CController%5CAPI%5CTeamController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CTeamController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CUserController%5D%5B1%5D' => 67,
'%5BApp%5CController%5CAPI%5CUserController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CUserController%23addGroupAction%5D%5B1%5D' => 68,
'%5BApp%5CController%5CAPI%5CUserController%23addTeamsAction%5D%5B1%5D' => 69,
'%5BApp%5CController%5CAPI%5CUserController%23addAccountsAction%5D%5B1%5D' => 70,
'%5BApp%5CController%5CAPI%5CUserController%23listAction%5D%5B1%5D' => 71,
'%5BApp%5CController%5CAPI%5CUserController%23singleAction%5D%5B1%5D' => 72,
'%5BApp%5CController%5CAPI%5CUserController%23getQueryBuilder%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CUserController%23getIdField%5D%5B1%5D' => 1,
'%5BApp%5CController%5CAPI%5CUserController%24importExportService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CBaseController%5D%5B1%5D' => 1,
'%5BApp%5CController%5CBaseController%23isLocalReferrer%5D%5B1%5D' => 1,
'%5BApp%5CController%5CBaseController%23redirectToLocalReferrer%5D%5B1%5D' => 1,
'%5BApp%5CController%5CBaseController%23saveEntity%5D%5B1%5D' => 1,
'%5BApp%5CController%5CBaseController%23deleteEntity%5D%5B1%5D' => 1,
'%5BApp%5CController%5CBaseController%23getDependentEntities%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAnalysisController%5D%5B1%5D' => 73,
'%5BApp%5CController%5CJury%5CAnalysisController%23set_or_increment%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAnalysisController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAnalysisController%23applyFilter%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAnalysisController%23indexAction%5D%5B1%5D' => 74,
'%5BApp%5CController%5CJury%5CAnalysisController%23teamAction%5D%5B1%5D' => 75,
'%5BApp%5CController%5CJury%5CAnalysisController%23problemAction%5D%5B1%5D' => 76,
'%5BApp%5CController%5CJury%5CAnalysisController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAuditLogController%5D%5B1%5D' => 77,
'%5BApp%5CController%5CJury%5CAuditLogController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAuditLogController%23indexAction%5D%5B1%5D' => 78,
'%5BApp%5CController%5CJury%5CAuditLogController%23generateDatatypeUrl%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAuditLogController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAuditLogController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CAuditLogController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CBalloonController%5D%5B1%5D' => 79,
'%5BApp%5CController%5CJury%5CBalloonController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CBalloonController%23indexAction%5D%5B1%5D' => 80,
'%5BApp%5CController%5CJury%5CBalloonController%23setDoneAction%5D%5B1%5D' => 81,
'%5BApp%5CController%5CJury%5CBalloonController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CBalloonController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CBalloonController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CClarificationController%5D%5B1%5D' => 82,
'%5BApp%5CController%5CJury%5CClarificationController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CClarificationController%23indexAction%5D%5B1%5D' => 83,
'%5BApp%5CController%5CJury%5CClarificationController%23viewAction%5D%5B1%5D' => 84,
'%5BApp%5CController%5CJury%5CClarificationController%23getProblemShortName%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CClarificationController%23getClarificationFormData%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CClarificationController%23composeClarificationAction%5D%5B1%5D' => 85,
'%5BApp%5CController%5CJury%5CClarificationController%23toggleClaimAction%5D%5B1%5D' => 86,
'%5BApp%5CController%5CJury%5CClarificationController%23toggleAnsweredAction%5D%5B1%5D' => 87,
'%5BApp%5CController%5CJury%5CClarificationController%23changeSubjectAction%5D%5B1%5D' => 88,
'%5BApp%5CController%5CJury%5CClarificationController%23changeQueueAction%5D%5B1%5D' => 89,
'%5BApp%5CController%5CJury%5CClarificationController%23sendAction%5D%5B1%5D' => 90,
'%5BApp%5CController%5CJury%5CClarificationController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CClarificationController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CClarificationController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CConfigController%5D%5B1%5D' => 91,
'%5BApp%5CController%5CJury%5CConfigController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CConfigController%23logUnverifiedJudgings%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CConfigController%23indexAction%5D%5B1%5D' => 92,
'%5BApp%5CController%5CJury%5CConfigController%23checkAction%5D%5B1%5D' => 93,
'%5BApp%5CController%5CJury%5CConfigController%23phpinfoAction%5D%5B1%5D' => 94,
'%5BApp%5CController%5CJury%5CConfigController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CConfigController%24logger%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CConfigController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CConfigController%24CheckConfigService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CContestController%5D%5B1%5D' => 95,
'%5BApp%5CController%5CJury%5CContestController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CContestController%23indexAction%5D%5B1%5D' => 96,
'%5BApp%5CController%5CJury%5CContestController%23viewAction%5D%5B1%5D' => 97,
'%5BApp%5CController%5CJury%5CContestController%23removeIntervalAction%5D%5B1%5D' => 98,
'%5BApp%5CController%5CJury%5CContestController%23editAction%5D%5B1%5D' => 99,
'%5BApp%5CController%5CJury%5CContestController%23deleteAction%5D%5B1%5D' => 100,
'%5BApp%5CController%5CJury%5CContestController%23deleteProblemAction%5D%5B1%5D' => 101,
'%5BApp%5CController%5CJury%5CContestController%23addAction%5D%5B1%5D' => 102,
'%5BApp%5CController%5CJury%5CContestController%23finalizeAction%5D%5B1%5D' => 103,
'%5BApp%5CController%5CJury%5CContestController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CContestController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CContestController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CContestController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CExecutableController%5D%5B1%5D' => 104,
'%5BApp%5CController%5CJury%5CExecutableController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CExecutableController%23indexAction%5D%5B1%5D' => 105,
'%5BApp%5CController%5CJury%5CExecutableController%23viewAction%5D%5B1%5D' => 106,
'%5BApp%5CController%5CJury%5CExecutableController%23contentAction%5D%5B1%5D' => 107,
'%5BApp%5CController%5CJury%5CExecutableController%23downloadAction%5D%5B1%5D' => 108,
'%5BApp%5CController%5CJury%5CExecutableController%23downloadSingleAction%5D%5B1%5D' => 109,
'%5BApp%5CController%5CJury%5CExecutableController%23editAction%5D%5B1%5D' => 110,
'%5BApp%5CController%5CJury%5CExecutableController%23deleteAction%5D%5B1%5D' => 111,
'%5BApp%5CController%5CJury%5CExecutableController%23editFilesAction%5D%5B1%5D' => 112,
'%5BApp%5CController%5CJury%5CExecutableController%23dataForEditor%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CExecutableController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CExecutableController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CExecutableController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CExecutableController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%5D%5B1%5D' => 113,
'%5BApp%5CController%5CJury%5CImportExportController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%23indexAction%5D%5B1%5D' => 114,
'%5BApp%5CController%5CJury%5CImportExportController%23contestYamlAction%5D%5B1%5D' => 115,
'%5BApp%5CController%5CJury%5CImportExportController%23exportTsvAction%5D%5B1%5D' => 116,
'%5BApp%5CController%5CJury%5CImportExportController%23exportHtmlAction%5D%5B1%5D' => 117,
'%5BApp%5CController%5CJury%5CImportExportController%23getResultsHtml%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%23getClarificationsHtml%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%24baylorCmsService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%24importExportService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%24scoreboardService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CImportExportController%24domjudgeVersion%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CInternalErrorController%5D%5B1%5D' => 118,
'%5BApp%5CController%5CJury%5CInternalErrorController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CInternalErrorController%23indexAction%5D%5B1%5D' => 119,
'%5BApp%5CController%5CJury%5CInternalErrorController%23viewAction%5D%5B1%5D' => 120,
'%5BApp%5CController%5CJury%5CInternalErrorController%23handleAction%5D%5B1%5D' => 121,
'%5BApp%5CController%5CJury%5CInternalErrorController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CInternalErrorController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJudgehostController%5D%5B1%5D' => 122,
'%5BApp%5CController%5CJury%5CJudgehostController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJudgehostController%23indexAction%5D%5B1%5D' => 123,
'%5BApp%5CController%5CJury%5CJudgehostController%23viewAction%5D%5B1%5D' => 124,
'%5BApp%5CController%5CJury%5CJudgehostController%23deleteAction%5D%5B1%5D' => 125,
'%5BApp%5CController%5CJury%5CJudgehostController%23activateAction%5D%5B1%5D' => 126,
'%5BApp%5CController%5CJury%5CJudgehostController%23deactivateAction%5D%5B1%5D' => 127,
'%5BApp%5CController%5CJury%5CJudgehostController%23activateAllAction%5D%5B1%5D' => 128,
'%5BApp%5CController%5CJury%5CJudgehostController%23deactivateAllAction%5D%5B1%5D' => 129,
'%5BApp%5CController%5CJury%5CJudgehostController%23addMultipleAction%5D%5B1%5D' => 130,
'%5BApp%5CController%5CJury%5CJudgehostController%23editMultipleAction%5D%5B1%5D' => 131,
'%5BApp%5CController%5CJury%5CJudgehostController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJudgehostController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJudgehostController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%5D%5B1%5D' => 132,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%23indexAction%5D%5B1%5D' => 133,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%23viewAction%5D%5B1%5D' => 134,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%23editAction%5D%5B1%5D' => 135,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%23deleteAction%5D%5B1%5D' => 136,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%23addAction%5D%5B1%5D' => 137,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJudgehostRestrictionController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJuryMiscController%5D%5B1%5D' => 138,
'%5BApp%5CController%5CJury%5CJuryMiscController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJuryMiscController%23indexAction%5D%5B1%5D' => 139,
'%5BApp%5CController%5CJury%5CJuryMiscController%23updatesAction%5D%5B1%5D' => 140,
'%5BApp%5CController%5CJury%5CJuryMiscController%23ajaxDataAction%5D%5B1%5D' => 141,
'%5BApp%5CController%5CJury%5CJuryMiscController%23refreshCacheAction%5D%5B1%5D' => 142,
'%5BApp%5CController%5CJury%5CJuryMiscController%23judgingVerifierAction%5D%5B1%5D' => 143,
'%5BApp%5CController%5CJury%5CJuryMiscController%23changeContestAction%5D%5B1%5D' => 144,
'%5BApp%5CController%5CJury%5CJuryMiscController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CJuryMiscController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CLanguageController%5D%5B1%5D' => 145,
'%5BApp%5CController%5CJury%5CLanguageController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CLanguageController%23indexAction%5D%5B1%5D' => 146,
'%5BApp%5CController%5CJury%5CLanguageController%23addAction%5D%5B1%5D' => 147,
'%5BApp%5CController%5CJury%5CLanguageController%23viewAction%5D%5B1%5D' => 148,
'%5BApp%5CController%5CJury%5CLanguageController%23toggleSubmitAction%5D%5B1%5D' => 149,
'%5BApp%5CController%5CJury%5CLanguageController%23toggleJudgeAction%5D%5B1%5D' => 150,
'%5BApp%5CController%5CJury%5CLanguageController%23editAction%5D%5B1%5D' => 151,
'%5BApp%5CController%5CJury%5CLanguageController%23deleteAction%5D%5B1%5D' => 152,
'%5BApp%5CController%5CJury%5CLanguageController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CLanguageController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CLanguageController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CLanguageController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CPrintController%5D%5B1%5D' => 153,
'%5BApp%5CController%5CJury%5CPrintController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CPrintController%23showAction%5D%5B1%5D' => 154,
'%5BApp%5CController%5CJury%5CPrintController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CPrintController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CProblemController%5D%5B1%5D' => 155,
'%5BApp%5CController%5CJury%5CProblemController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CProblemController%23indexAction%5D%5B1%5D' => 156,
'%5BApp%5CController%5CJury%5CProblemController%23exportAction%5D%5B1%5D' => 157,
'%5BApp%5CController%5CJury%5CProblemController%23viewAction%5D%5B1%5D' => 158,
'%5BApp%5CController%5CJury%5CProblemController%23viewTextAction%5D%5B1%5D' => 159,
'%5BApp%5CController%5CJury%5CProblemController%23testcasesAction%5D%5B1%5D' => 160,
'%5BApp%5CController%5CJury%5CProblemController%23moveTestcaseAction%5D%5B1%5D' => 161,
'%5BApp%5CController%5CJury%5CProblemController%23fetchTestcaseAction%5D%5B1%5D' => 162,
'%5BApp%5CController%5CJury%5CProblemController%23editAction%5D%5B1%5D' => 163,
'%5BApp%5CController%5CJury%5CProblemController%23deleteAction%5D%5B1%5D' => 164,
'%5BApp%5CController%5CJury%5CProblemController%23addAction%5D%5B1%5D' => 165,
'%5BApp%5CController%5CJury%5CProblemController%23addTestcasesToZip%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CProblemController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CProblemController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CProblemController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CProblemController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CProblemController%24submissionService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CProblemController%24importProblemService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CRejudgingController%5D%5B1%5D' => 166,
'%5BApp%5CController%5CJury%5CRejudgingController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CRejudgingController%23indexAction%5D%5B1%5D' => 167,
'%5BApp%5CController%5CJury%5CRejudgingController%23viewAction%5D%5B1%5D' => 168,
'%5BApp%5CController%5CJury%5CRejudgingController%23finishAction%5D%5B1%5D' => 169,
'%5BApp%5CController%5CJury%5CRejudgingController%23addAction%5D%5B1%5D' => 170,
'%5BApp%5CController%5CJury%5CRejudgingController%23createAction%5D%5B1%5D' => 171,
'%5BApp%5CController%5CJury%5CRejudgingController%23createRejudging%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CRejudgingController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CRejudgingController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CRejudgingController%24router%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CRejudgingController%24session%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CScoreboardController%5D%5B1%5D' => 172,
'%5BApp%5CController%5CJury%5CScoreboardController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CScoreboardController%23scoreboardAction%5D%5B1%5D' => 173,
'%5BApp%5CController%5CJury%5CScoreboardController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CScoreboardController%24scoreboardService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CShadowDifferencesController%5D%5B1%5D' => 174,
'%5BApp%5CController%5CJury%5CShadowDifferencesController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CShadowDifferencesController%23indexAction%5D%5B1%5D' => 175,
'%5BApp%5CController%5CJury%5CShadowDifferencesController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CShadowDifferencesController%24submissions%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CShadowDifferencesController%24session%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CShadowDifferencesController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CSubmissionController%5D%5B1%5D' => 176,
'%5BApp%5CController%5CJury%5CSubmissionController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CSubmissionController%23indexAction%5D%5B1%5D' => 177,
'%5BApp%5CController%5CJury%5CSubmissionController%23parseMetadata%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CSubmissionController%23viewAction%5D%5B1%5D' => 178,
'%5BApp%5CController%5CJury%5CSubmissionController%23viewForJudgingAction%5D%5B1%5D' => 179,
'%5BApp%5CController%5CJury%5CSubmissionController%23viewForExternalIdAction%5D%5B1%5D' => 180,
'%5BApp%5CController%5CJury%5CSubmissionController%23teamOutputAction%5D%5B1%5D' => 181,
'%5BApp%5CController%5CJury%5CSubmissionController%23sourceAction%5D%5B1%5D' => 182,
'%5BApp%5CController%5CJury%5CSubmissionController%23editSourceAction%5D%5B1%5D' => 183,
'%5BApp%5CController%5CJury%5CSubmissionController%23updateStatusAction%5D%5B1%5D' => 184,
'%5BApp%5CController%5CJury%5CSubmissionController%23verifyAction%5D%5B1%5D' => 185,
'%5BApp%5CController%5CJury%5CSubmissionController%23determineFileChanged%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CSubmissionController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CSubmissionController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CSubmissionController%24submissionService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CSubmissionController%24router%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%5D%5B1%5D' => 186,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%23indexAction%5D%5B1%5D' => 187,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%23viewAction%5D%5B1%5D' => 188,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%23editAction%5D%5B1%5D' => 189,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%23deleteAction%5D%5B1%5D' => 190,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%23addAction%5D%5B1%5D' => 191,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamAffiliationController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamCategoryController%5D%5B1%5D' => 192,
'%5BApp%5CController%5CJury%5CTeamCategoryController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamCategoryController%23indexAction%5D%5B1%5D' => 193,
'%5BApp%5CController%5CJury%5CTeamCategoryController%23viewAction%5D%5B1%5D' => 194,
'%5BApp%5CController%5CJury%5CTeamCategoryController%23editAction%5D%5B1%5D' => 195,
'%5BApp%5CController%5CJury%5CTeamCategoryController%23deleteAction%5D%5B1%5D' => 196,
'%5BApp%5CController%5CJury%5CTeamCategoryController%23addAction%5D%5B1%5D' => 197,
'%5BApp%5CController%5CJury%5CTeamCategoryController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamCategoryController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamCategoryController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamCategoryController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamController%5D%5B1%5D' => 198,
'%5BApp%5CController%5CJury%5CTeamController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamController%23indexAction%5D%5B1%5D' => 199,
'%5BApp%5CController%5CJury%5CTeamController%23viewAction%5D%5B1%5D' => 200,
'%5BApp%5CController%5CJury%5CTeamController%23editAction%5D%5B1%5D' => 201,
'%5BApp%5CController%5CJury%5CTeamController%23deleteAction%5D%5B1%5D' => 202,
'%5BApp%5CController%5CJury%5CTeamController%23addAction%5D%5B1%5D' => 203,
'%5BApp%5CController%5CJury%5CTeamController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CTeamController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CUserController%5D%5B1%5D' => 204,
'%5BApp%5CController%5CJury%5CUserController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CUserController%23indexAction%5D%5B1%5D' => 205,
'%5BApp%5CController%5CJury%5CUserController%23viewAction%5D%5B1%5D' => 206,
'%5BApp%5CController%5CJury%5CUserController%23editAction%5D%5B1%5D' => 207,
'%5BApp%5CController%5CJury%5CUserController%23deleteAction%5D%5B1%5D' => 208,
'%5BApp%5CController%5CJury%5CUserController%23addAction%5D%5B1%5D' => 209,
'%5BApp%5CController%5CJury%5CUserController%23generatePasswordsAction%5D%5B1%5D' => 210,
'%5BApp%5CController%5CJury%5CUserController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CUserController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CUserController%24kernel%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CUserController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CJury%5CUserController%24tokenStorage%5D%5B1%5D' => 1,
'%5BApp%5CController%5CPublicController%5D%5B1%5D' => 211,
'%5BApp%5CController%5CPublicController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CPublicController%23scoreboardAction%5D%5B1%5D' => 212,
'%5BApp%5CController%5CPublicController%23changeContestAction%5D%5B1%5D' => 213,
'%5BApp%5CController%5CPublicController%23teamAction%5D%5B1%5D' => 214,
'%5BApp%5CController%5CPublicController%23problemsAction%5D%5B1%5D' => 215,
'%5BApp%5CController%5CPublicController%23problemTextAction%5D%5B1%5D' => 216,
'%5BApp%5CController%5CPublicController%23sampleTestcaseAction%5D%5B1%5D' => 217,
'%5BApp%5CController%5CPublicController%23sampleZipAction%5D%5B1%5D' => 218,
'%5BApp%5CController%5CPublicController%23indexAction%5D%5B1%5D' => 219,
'%5BApp%5CController%5CPublicController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CPublicController%24scoreboardService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CPublicController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CRootController%5D%5B1%5D' => 220,
'%5BApp%5CController%5CRootController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CRootController%23redirectAction%5D%5B1%5D' => 221,
'%5BApp%5CController%5CRootController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CSecurityController%5D%5B1%5D' => 1,
'%5BApp%5CController%5CSecurityController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CSecurityController%23loginAction%5D%5B1%5D' => 222,
'%5BApp%5CController%5CSecurityController%23registerAction%5D%5B1%5D' => 223,
'%5BApp%5CController%5CSecurityController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CClarificationController%5D%5B1%5D' => 224,
'%5BApp%5CController%5CTeam%5CClarificationController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CClarificationController%23viewAction%5D%5B1%5D' => 225,
'%5BApp%5CController%5CTeam%5CClarificationController%23addAction%5D%5B1%5D' => 226,
'%5BApp%5CController%5CTeam%5CClarificationController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CClarificationController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CClarificationController%24eventLogService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CClarificationController%24formFactory%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CMiscController%5D%5B1%5D' => 224,
'%5BApp%5CController%5CTeam%5CMiscController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CMiscController%23homeAction%5D%5B1%5D' => 227,
'%5BApp%5CController%5CTeam%5CMiscController%23changeContestAction%5D%5B1%5D' => 228,
'%5BApp%5CController%5CTeam%5CMiscController%23printAction%5D%5B1%5D' => 229,
'%5BApp%5CController%5CTeam%5CMiscController%23indexAction%5D%5B1%5D' => 230,
'%5BApp%5CController%5CTeam%5CMiscController%23compileAction%5D%5B1%5D' => 231,
'%5BApp%5CController%5CTeam%5CMiscController%23compileAction1%5D%5B1%5D' => 232,
'%5BApp%5CController%5CTeam%5CMiscController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CMiscController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CMiscController%24scoreboardService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CMiscController%24submissionService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CMiscController%24formFactory%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CProblemController%5D%5B1%5D' => 233,
'%5BApp%5CController%5CTeam%5CProblemController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CProblemController%23problemsAction%5D%5B1%5D' => 234,
'%5BApp%5CController%5CTeam%5CProblemController%23problemTextAction%5D%5B1%5D' => 235,
'%5BApp%5CController%5CTeam%5CProblemController%23sampleTestcaseAction%5D%5B1%5D' => 236,
'%5BApp%5CController%5CTeam%5CProblemController%23sampleZipAction%5D%5B1%5D' => 237,
'%5BApp%5CController%5CTeam%5CProblemController%23problemlistAction%5D%5B1%5D' => 238,
'%5BApp%5CController%5CTeam%5CProblemController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CProblemController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CScoreboardController%5D%5B1%5D' => 233,
'%5BApp%5CController%5CTeam%5CScoreboardController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CScoreboardController%23scoreboardAction%5D%5B1%5D' => 239,
'%5BApp%5CController%5CTeam%5CScoreboardController%23teamAction%5D%5B1%5D' => 240,
'%5BApp%5CController%5CTeam%5CScoreboardController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CScoreboardController%24scoreboardService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CScoreboardController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CSubmissionController%5D%5B1%5D' => 233,
'%5BApp%5CController%5CTeam%5CSubmissionController%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CSubmissionController%23createAction%5D%5B1%5D' => 241,
'%5BApp%5CController%5CTeam%5CSubmissionController%23viewAction%5D%5B1%5D' => 242,
'%5BApp%5CController%5CTeam%5CSubmissionController%24em%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CSubmissionController%24submissionService%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CSubmissionController%24dj%5D%5B1%5D' => 1,
'%5BApp%5CController%5CTeam%5CSubmissionController%24formFactory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%5D%5B1%5D' => 243,
'%5BApp%5CEntity%5CAuditLog%23getLogid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23setLogtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23getLogtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23setUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23getUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23setDatatype%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23getDatatype%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23setDataid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23getDataid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23setAction%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23getAction%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23setExtrainfo%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%23getExtrainfo%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CAuditLog%24logid%5D%5B1%5D' => 244,
'%5BApp%5CEntity%5CAuditLog%24logtime%5D%5B1%5D' => 245,
'%5BApp%5CEntity%5CAuditLog%24cid%5D%5B1%5D' => 246,
'%5BApp%5CEntity%5CAuditLog%24user%5D%5B1%5D' => 247,
'%5BApp%5CEntity%5CAuditLog%24datatype%5D%5B1%5D' => 248,
'%5BApp%5CEntity%5CAuditLog%24dataid%5D%5B1%5D' => 249,
'%5BApp%5CEntity%5CAuditLog%24action%5D%5B1%5D' => 250,
'%5BApp%5CEntity%5CAuditLog%24extrainfo%5D%5B1%5D' => 251,
'%5BApp%5CEntity%5CBalloon%5D%5B1%5D' => 252,
'%5BApp%5CEntity%5CBalloon%23getBalloonid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBalloon%23setSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBalloon%23getSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBalloon%23setDone%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBalloon%23getDone%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBalloon%23setSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBalloon%23getSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBalloon%24balloonid%5D%5B1%5D' => 253,
'%5BApp%5CEntity%5CBalloon%24submitid%5D%5B1%5D' => 254,
'%5BApp%5CEntity%5CBalloon%24done%5D%5B1%5D' => 255,
'%5BApp%5CEntity%5CBalloon%24submission%5D%5B1%5D' => 256,
'%5BApp%5CEntity%5CBaseApiEntity%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBaseApiEntity%23getApiIdField%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CBaseApiEntity%23getApiId%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%5D%5B1%5D' => 257,
'%5BApp%5CEntity%5CClarification%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setClarid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getClarid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setRespid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getRespid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setSubmittime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getSubmittime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getAbsoluteSubmitTime%5D%5B1%5D' => 258,
'%5BApp%5CEntity%5CClarification%23getRelativeSubmitTime%5D%5B1%5D' => 259,
'%5BApp%5CEntity%5CClarification%23setSenderId%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getSenderId%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setRecipientId%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getRecipientId%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setJuryMember%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getJuryMember%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setProbid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getProbid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setCategory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getCategory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setQueue%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getQueue%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setBody%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getBody%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setAnswered%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getAnswered%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setInReplyTo%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getInReplyTo%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23addReply%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23removeReply%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getReplies%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setSender%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getSender%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23setRecipient%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getRecipient%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getExternalRelationships%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%23getSummary%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CClarification%24clarid%5D%5B1%5D' => 260,
'%5BApp%5CEntity%5CClarification%24externalid%5D%5B1%5D' => 261,
'%5BApp%5CEntity%5CClarification%24cid%5D%5B1%5D' => 262,
'%5BApp%5CEntity%5CClarification%24respid%5D%5B1%5D' => 263,
'%5BApp%5CEntity%5CClarification%24submittime%5D%5B1%5D' => 264,
'%5BApp%5CEntity%5CClarification%24sender_id%5D%5B1%5D' => 265,
'%5BApp%5CEntity%5CClarification%24recipient_id%5D%5B1%5D' => 266,
'%5BApp%5CEntity%5CClarification%24jury_member%5D%5B1%5D' => 267,
'%5BApp%5CEntity%5CClarification%24probid%5D%5B1%5D' => 268,
'%5BApp%5CEntity%5CClarification%24category%5D%5B1%5D' => 269,
'%5BApp%5CEntity%5CClarification%24queue%5D%5B1%5D' => 270,
'%5BApp%5CEntity%5CClarification%24body%5D%5B1%5D' => 271,
'%5BApp%5CEntity%5CClarification%24answered%5D%5B1%5D' => 272,
'%5BApp%5CEntity%5CClarification%24problem%5D%5B1%5D' => 273,
'%5BApp%5CEntity%5CClarification%24contest%5D%5B1%5D' => 274,
'%5BApp%5CEntity%5CClarification%24in_reply_to%5D%5B1%5D' => 275,
'%5BApp%5CEntity%5CClarification%24replies%5D%5B1%5D' => 276,
'%5BApp%5CEntity%5CClarification%24sender%5D%5B1%5D' => 277,
'%5BApp%5CEntity%5CClarification%24recipient%5D%5B1%5D' => 278,
'%5BApp%5CEntity%5CConfiguration%5D%5B1%5D' => 279,
'%5BApp%5CEntity%5CConfiguration%23getConfigid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23setValue%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23getValue%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23setType%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23getType%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23setPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23getPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23setCategory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23getCategory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23setDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%23getDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CConfiguration%24configid%5D%5B1%5D' => 280,
'%5BApp%5CEntity%5CConfiguration%24name%5D%5B1%5D' => 281,
'%5BApp%5CEntity%5CConfiguration%24value%5D%5B1%5D' => 282,
'%5BApp%5CEntity%5CConfiguration%24type%5D%5B1%5D' => 283,
'%5BApp%5CEntity%5CConfiguration%24public%5D%5B1%5D' => 284,
'%5BApp%5CEntity%5CConfiguration%24category%5D%5B1%5D' => 285,
'%5BApp%5CEntity%5CConfiguration%24description%5D%5B1%5D' => 286,
'%5BApp%5CEntity%5CContest%5D%5B1%5D' => 287,
'%5BApp%5CEntity%5CContest%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setShortname%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getShortname%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getActivatetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getStartTimeObject%5D%5B1%5D' => 288,
'%5BApp%5CEntity%5CContest%23setStarttimeEnabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getStarttimeEnabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getFreezetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getEndTimeObject%5D%5B1%5D' => 289,
'%5BApp%5CEntity%5CContest%23getUnfreezetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getFinalizetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setFinalizetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getFinalizecomment%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setFinalizecomment%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getB%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setB%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getDeactivatetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setActivatetimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getActivatetimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setStarttimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getStarttimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setFreezetimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getFreezetimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setEndtimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getEndtimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setUnfreezetimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getUnfreezetimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setDeactivatetimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getDeactivatetimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setActivatetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setFreezetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setUnfreezetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setDeactivatetime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setEnabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getEnabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setProcessBalloons%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getProcessBalloons%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23setOpenToAllTeams%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23isOpenToAllTeams%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23addTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23removeTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getTeams%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23addProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23removeProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getProblems%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23addClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23removeClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getClarifications%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23addSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23removeSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getSubmissions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23addInternalError%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23removeInternalError%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getInternalErrors%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getDuration%5D%5B1%5D' => 290,
'%5BApp%5CEntity%5CContest%23getScoreboardFreezeDuration%5D%5B1%5D' => 290,
'%5BApp%5CEntity%5CContest%23isActive%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getAbsoluteTime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23addRemovedInterval%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23removeRemovedInterval%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getRemovedIntervals%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getContestTime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getJuryTimeData%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getState%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getMinutesRemaining%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getFreezeData%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23updateTimes%5D%5B1%5D' => 291,
'%5BApp%5CEntity%5CContest%23validate%5D%5B1%5D' => 292,
'%5BApp%5CEntity%5CContest%23isTimeInContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getCountdown%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getOpenToAllTeams%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23getTeamCategories%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23addTeamCategory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%23removeTeamCategory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContest%24cid%5D%5B1%5D' => 293,
'%5BApp%5CEntity%5CContest%24externalid%5D%5B1%5D' => 294,
'%5BApp%5CEntity%5CContest%24name%5D%5B1%5D' => 295,
'%5BApp%5CEntity%5CContest%24shortname%5D%5B1%5D' => 296,
'%5BApp%5CEntity%5CContest%24activatetime%5D%5B1%5D' => 297,
'%5BApp%5CEntity%5CContest%24starttime%5D%5B1%5D' => 298,
'%5BApp%5CEntity%5CContest%24starttimeEnabled%5D%5B1%5D' => 299,
'%5BApp%5CEntity%5CContest%24freezetime%5D%5B1%5D' => 300,
'%5BApp%5CEntity%5CContest%24endtime%5D%5B1%5D' => 301,
'%5BApp%5CEntity%5CContest%24unfreezetime%5D%5B1%5D' => 302,
'%5BApp%5CEntity%5CContest%24finalizetime%5D%5B1%5D' => 303,
'%5BApp%5CEntity%5CContest%24finalizecomment%5D%5B1%5D' => 304,
'%5BApp%5CEntity%5CContest%24b%5D%5B1%5D' => 305,
'%5BApp%5CEntity%5CContest%24deactivatetime%5D%5B1%5D' => 306,
'%5BApp%5CEntity%5CContest%24activatetimeString%5D%5B1%5D' => 307,
'%5BApp%5CEntity%5CContest%24starttimeString%5D%5B1%5D' => 308,
'%5BApp%5CEntity%5CContest%24freezetimeString%5D%5B1%5D' => 309,
'%5BApp%5CEntity%5CContest%24endtimeString%5D%5B1%5D' => 310,
'%5BApp%5CEntity%5CContest%24unfreezetimeString%5D%5B1%5D' => 311,
'%5BApp%5CEntity%5CContest%24deactivatetimeString%5D%5B1%5D' => 312,
'%5BApp%5CEntity%5CContest%24enabled%5D%5B1%5D' => 313,
'%5BApp%5CEntity%5CContest%24processBalloons%5D%5B1%5D' => 314,
'%5BApp%5CEntity%5CContest%24public%5D%5B1%5D' => 315,
'%5BApp%5CEntity%5CContest%24openToAllTeams%5D%5B1%5D' => 316,
'%5BApp%5CEntity%5CContest%24teams%5D%5B1%5D' => 317,
'%5BApp%5CEntity%5CContest%24team_categories%5D%5B1%5D' => 318,
'%5BApp%5CEntity%5CContest%24clarifications%5D%5B1%5D' => 319,
'%5BApp%5CEntity%5CContest%24submissions%5D%5B1%5D' => 320,
'%5BApp%5CEntity%5CContest%24problems%5D%5B1%5D' => 321,
'%5BApp%5CEntity%5CContest%24internal_errors%5D%5B1%5D' => 322,
'%5BApp%5CEntity%5CContest%24removedIntervals%5D%5B1%5D' => 323,
'%5BApp%5CEntity%5CContestProblem%5D%5B1%5D' => 324,
'%5BApp%5CEntity%5CContestProblem%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getProbid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23setShortname%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getShortname%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23setPoints%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getPoints%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23setAllowSubmit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getAllowSubmit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23setAllowJudge%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getAllowJudge%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23setColor%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getColor%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23setLazyEvalResults%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getLazyEvalResults%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23setProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23addSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23removeSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getSubmissions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getExternalId%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getApiId%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%23getSubtask%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CContestProblem%24shortname%5D%5B1%5D' => 325,
'%5BApp%5CEntity%5CContestProblem%24points%5D%5B1%5D' => 326,
'%5BApp%5CEntity%5CContestProblem%24allowSubmit%5D%5B1%5D' => 327,
'%5BApp%5CEntity%5CContestProblem%24allowJudge%5D%5B1%5D' => 328,
'%5BApp%5CEntity%5CContestProblem%24color%5D%5B1%5D' => 329,
'%5BApp%5CEntity%5CContestProblem%24lazyEvalResults%5D%5B1%5D' => 330,
'%5BApp%5CEntity%5CContestProblem%24contest%5D%5B1%5D' => 331,
'%5BApp%5CEntity%5CContestProblem%24problem%5D%5B1%5D' => 332,
'%5BApp%5CEntity%5CContestProblem%24submissions%5D%5B1%5D' => 333,
'%5BApp%5CEntity%5CEvent%5D%5B1%5D' => 334,
'%5BApp%5CEntity%5CEvent%23setEventid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23getEventid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23setEventtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23getEventtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23setEndpointtype%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23getEndpointtype%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23setEndpointid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23getEndpointid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23setAction%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23getAction%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23setContent%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23getContent%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CEvent%24eventid%5D%5B1%5D' => 335,
'%5BApp%5CEntity%5CEvent%24eventtime%5D%5B1%5D' => 336,
'%5BApp%5CEntity%5CEvent%24endpointtype%5D%5B1%5D' => 337,
'%5BApp%5CEntity%5CEvent%24endpointid%5D%5B1%5D' => 338,
'%5BApp%5CEntity%5CEvent%24action%5D%5B1%5D' => 339,
'%5BApp%5CEntity%5CEvent%24content%5D%5B1%5D' => 340,
'%5BApp%5CEntity%5CEvent%24cid%5D%5B1%5D' => 341,
'%5BApp%5CEntity%5CEvent%24contest%5D%5B1%5D' => 342,
'%5BApp%5CEntity%5CExecutable%5D%5B1%5D' => 343,
'%5BApp%5CEntity%5CExecutable%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23setExecid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getExecid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23setMd5sum%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getMd5sum%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23setZipfile%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getZipfile%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getZipFileSize%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23setDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23setType%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getType%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23addLanguage%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23removeLanguage%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getLanguages%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23addProblemsCompare%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23removeProblemsCompare%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getProblemsCompare%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23addProblemsRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23removeProblemsRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%23getProblemsRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%24execid%5D%5B1%5D' => 344,
'%5BApp%5CEntity%5CExecutable%24md5sum%5D%5B1%5D' => 345,
'%5BApp%5CEntity%5CExecutable%24zipfile%5D%5B1%5D' => 346,
'%5BApp%5CEntity%5CExecutable%24zipfile_as_string%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExecutable%24description%5D%5B1%5D' => 347,
'%5BApp%5CEntity%5CExecutable%24type%5D%5B1%5D' => 348,
'%5BApp%5CEntity%5CExecutable%24languages%5D%5B1%5D' => 349,
'%5BApp%5CEntity%5CExecutable%24problems_compare%5D%5B1%5D' => 350,
'%5BApp%5CEntity%5CExecutable%24problems_run%5D%5B1%5D' => 351,
'%5BApp%5CEntity%5CExternalJudgement%5D%5B1%5D' => 352,
'%5BApp%5CEntity%5CExternalJudgement%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getExtjudgementid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setValid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getValid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23setSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23addExternalRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23removeExternalRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getExternalRuns%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getMaxRuntime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%23getSumRuntime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalJudgement%24extjudgementid%5D%5B1%5D' => 353,
'%5BApp%5CEntity%5CExternalJudgement%24externalid%5D%5B1%5D' => 354,
'%5BApp%5CEntity%5CExternalJudgement%24result%5D%5B1%5D' => 355,
'%5BApp%5CEntity%5CExternalJudgement%24starttime%5D%5B1%5D' => 356,
'%5BApp%5CEntity%5CExternalJudgement%24endtime%5D%5B1%5D' => 357,
'%5BApp%5CEntity%5CExternalJudgement%24valid%5D%5B1%5D' => 358,
'%5BApp%5CEntity%5CExternalJudgement%24cid%5D%5B1%5D' => 341,
'%5BApp%5CEntity%5CExternalJudgement%24contest%5D%5B1%5D' => 359,
'%5BApp%5CEntity%5CExternalJudgement%24submitid%5D%5B1%5D' => 360,
'%5BApp%5CEntity%5CExternalJudgement%24submission%5D%5B1%5D' => 361,
'%5BApp%5CEntity%5CExternalJudgement%24external_runs%5D%5B1%5D' => 362,
'%5BApp%5CEntity%5CExternalRelationshipEntityInterface%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRelationshipEntityInterface%23getExternalRelationships%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%5D%5B1%5D' => 363,
'%5BApp%5CEntity%5CExternalRun%23getExtrunid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setRuntime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getRuntime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setExtjudgementid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getExtjudgementid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setExternalJudgement%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getExternalJudgement%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setTestcaseid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getTestcaseid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setTestcase%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getTestcase%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CExternalRun%24extrunid%5D%5B1%5D' => 364,
'%5BApp%5CEntity%5CExternalRun%24externalid%5D%5B1%5D' => 365,
'%5BApp%5CEntity%5CExternalRun%24result%5D%5B1%5D' => 366,
'%5BApp%5CEntity%5CExternalRun%24endtime%5D%5B1%5D' => 367,
'%5BApp%5CEntity%5CExternalRun%24runtime%5D%5B1%5D' => 368,
'%5BApp%5CEntity%5CExternalRun%24extjudgementid%5D%5B1%5D' => 369,
'%5BApp%5CEntity%5CExternalRun%24external_judgement%5D%5B1%5D' => 370,
'%5BApp%5CEntity%5CExternalRun%24testcaseid%5D%5B1%5D' => 371,
'%5BApp%5CEntity%5CExternalRun%24testcase%5D%5B1%5D' => 372,
'%5BApp%5CEntity%5CExternalRun%24cid%5D%5B1%5D' => 341,
'%5BApp%5CEntity%5CExternalRun%24contest%5D%5B1%5D' => 359,
'%5BApp%5CEntity%5CInternalError%5D%5B1%5D' => 373,
'%5BApp%5CEntity%5CInternalError%23setErrorid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getErrorid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setJudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getJudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setJudgehostlog%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getJudgehostlog%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setTime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getTime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setDisabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getDisabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setStatus%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getStatus%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23setJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%23getJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CInternalError%24errorid%5D%5B1%5D' => 374,
'%5BApp%5CEntity%5CInternalError%24judgingid%5D%5B1%5D' => 375,
'%5BApp%5CEntity%5CInternalError%24cid%5D%5B1%5D' => 376,
'%5BApp%5CEntity%5CInternalError%24description%5D%5B1%5D' => 377,
'%5BApp%5CEntity%5CInternalError%24judgehostlog%5D%5B1%5D' => 378,
'%5BApp%5CEntity%5CInternalError%24time%5D%5B1%5D' => 379,
'%5BApp%5CEntity%5CInternalError%24disabled%5D%5B1%5D' => 380,
'%5BApp%5CEntity%5CInternalError%24status%5D%5B1%5D' => 381,
'%5BApp%5CEntity%5CInternalError%24contest%5D%5B1%5D' => 382,
'%5BApp%5CEntity%5CInternalError%24judging%5D%5B1%5D' => 383,
'%5BApp%5CEntity%5CJudgehost%5D%5B1%5D' => 384,
'%5BApp%5CEntity%5CJudgehost%23setHostname%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23getHostname%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23setActive%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23getActive%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23setPolltime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23getPolltime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23setRestrictionid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23getRestrictionid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23setRestriction%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23getRestriction%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23addJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23removeJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%23getJudgings%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehost%24hostname%5D%5B1%5D' => 385,
'%5BApp%5CEntity%5CJudgehost%24active%5D%5B1%5D' => 386,
'%5BApp%5CEntity%5CJudgehost%24polltime%5D%5B1%5D' => 387,
'%5BApp%5CEntity%5CJudgehost%24restrictionid%5D%5B1%5D' => 388,
'%5BApp%5CEntity%5CJudgehost%24restriction%5D%5B1%5D' => 389,
'%5BApp%5CEntity%5CJudgehost%24judgings%5D%5B1%5D' => 390,
'%5BApp%5CEntity%5CJudgehostRestriction%5D%5B1%5D' => 391,
'%5BApp%5CEntity%5CJudgehostRestriction%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23getRestrictionid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23setRestrictions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23getRestrictions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23setContests%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23getContests%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23setProblems%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23getProblems%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23setLanguages%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23getLanguages%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23setRejudgeOwn%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23getRejudgeOwn%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23addJudgehost%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23removeJudgehost%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%23getJudgehosts%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgehostRestriction%24restrictionid%5D%5B1%5D' => 392,
'%5BApp%5CEntity%5CJudgehostRestriction%24name%5D%5B1%5D' => 393,
'%5BApp%5CEntity%5CJudgehostRestriction%24restrictions%5D%5B1%5D' => 394,
'%5BApp%5CEntity%5CJudgehostRestriction%24judgehosts%5D%5B1%5D' => 395,
'%5BApp%5CEntity%5CJudging%5D%5B1%5D' => 396,
'%5BApp%5CEntity%5CJudging%23getMaxRuntime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getSumRuntime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getJudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getAbsoluteStartTime%5D%5B1%5D' => 397,
'%5BApp%5CEntity%5CJudging%23getRelativeStartTime%5D%5B1%5D' => 398,
'%5BApp%5CEntity%5CJudging%23setEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getAbsoluteEndTime%5D%5B1%5D' => 399,
'%5BApp%5CEntity%5CJudging%23getRelativeEndTime%5D%5B1%5D' => 400,
'%5BApp%5CEntity%5CJudging%23setResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setVerified%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getVerified%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setJuryMember%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getJuryMember%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setVerifyComment%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getVerifyComment%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setValid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getValid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setOutputCompile%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getOutputCompile%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setSeen%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getSeen%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setRejudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getRejudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setPrevjudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getPrevjudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setJudgehostName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getJudgehostName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setRejudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getRejudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setOriginalJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getOriginalJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setJudgehost%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getJudgehost%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23addRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23removeRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getRuns%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getExternalRelationships%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23isAborted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23isStillBusy%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getTask%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setTask%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23getTaskResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%23setTaskResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudging%24judgingid%5D%5B1%5D' => 401,
'%5BApp%5CEntity%5CJudging%24cid%5D%5B1%5D' => 402,
'%5BApp%5CEntity%5CJudging%24submitid%5D%5B1%5D' => 403,
'%5BApp%5CEntity%5CJudging%24starttime%5D%5B1%5D' => 404,
'%5BApp%5CEntity%5CJudging%24endtime%5D%5B1%5D' => 405,
'%5BApp%5CEntity%5CJudging%24result%5D%5B1%5D' => 406,
'%5BApp%5CEntity%5CJudging%24verified%5D%5B1%5D' => 407,
'%5BApp%5CEntity%5CJudging%24jury_member%5D%5B1%5D' => 408,
'%5BApp%5CEntity%5CJudging%24verify_comment%5D%5B1%5D' => 409,
'%5BApp%5CEntity%5CJudging%24valid%5D%5B1%5D' => 410,
'%5BApp%5CEntity%5CJudging%24output_compile%5D%5B1%5D' => 411,
'%5BApp%5CEntity%5CJudging%24output_compile_as_string%5D%5B1%5D' => 412,
'%5BApp%5CEntity%5CJudging%24seen%5D%5B1%5D' => 413,
'%5BApp%5CEntity%5CJudging%24rejudgingid%5D%5B1%5D' => 414,
'%5BApp%5CEntity%5CJudging%24prevjudgingid%5D%5B1%5D' => 415,
'%5BApp%5CEntity%5CJudging%24judgehost_name%5D%5B1%5D' => 416,
'%5BApp%5CEntity%5CJudging%24contest%5D%5B1%5D' => 417,
'%5BApp%5CEntity%5CJudging%24submission%5D%5B1%5D' => 418,
'%5BApp%5CEntity%5CJudging%24judgehost%5D%5B1%5D' => 419,
'%5BApp%5CEntity%5CJudging%24rejudging%5D%5B1%5D' => 420,
'%5BApp%5CEntity%5CJudging%24original_judging%5D%5B1%5D' => 421,
'%5BApp%5CEntity%5CJudging%24runs%5D%5B1%5D' => 422,
'%5BApp%5CEntity%5CJudging%24task_result%5D%5B1%5D' => 423,
'%5BApp%5CEntity%5CJudgingRun%5D%5B1%5D' => 424,
'%5BApp%5CEntity%5CJudgingRun%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getRunid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23setJudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getJudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23setTestcaseid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getTestcaseid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23setRunresult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getRunresult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23setRuntime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getRuntime%5D%5B1%5D' => 425,
'%5BApp%5CEntity%5CJudgingRun%23setEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getAbsoluteEndTime%5D%5B1%5D' => 258,
'%5BApp%5CEntity%5CJudgingRun%23getRelativeEndTime%5D%5B1%5D' => 259,
'%5BApp%5CEntity%5CJudgingRun%23setJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23setTestcase%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getTestcase%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getTestcaseRank%5D%5B1%5D' => 426,
'%5BApp%5CEntity%5CJudgingRun%23setOutput%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%23getOutput%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRun%24runid%5D%5B1%5D' => 427,
'%5BApp%5CEntity%5CJudgingRun%24judgingid%5D%5B1%5D' => 428,
'%5BApp%5CEntity%5CJudgingRun%24testcaseid%5D%5B1%5D' => 429,
'%5BApp%5CEntity%5CJudgingRun%24runresult%5D%5B1%5D' => 430,
'%5BApp%5CEntity%5CJudgingRun%24runtime%5D%5B1%5D' => 431,
'%5BApp%5CEntity%5CJudgingRun%24endtime%5D%5B1%5D' => 432,
'%5BApp%5CEntity%5CJudgingRun%24judging%5D%5B1%5D' => 433,
'%5BApp%5CEntity%5CJudgingRun%24testcase%5D%5B1%5D' => 434,
'%5BApp%5CEntity%5CJudgingRun%24output%5D%5B1%5D' => 435,
'%5BApp%5CEntity%5CJudgingRunOutput%5D%5B1%5D' => 436,
'%5BApp%5CEntity%5CJudgingRunOutput%23setRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23getRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23setOutputRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23getOutputRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23setOutputDiff%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23getOutputDiff%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23setOutputError%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23getOutputError%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23setOutputSystem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23getOutputSystem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23getMetadata%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%23setMetadata%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CJudgingRunOutput%24run%5D%5B1%5D' => 437,
'%5BApp%5CEntity%5CJudgingRunOutput%24output_run%5D%5B1%5D' => 438,
'%5BApp%5CEntity%5CJudgingRunOutput%24output_diff%5D%5B1%5D' => 439,
'%5BApp%5CEntity%5CJudgingRunOutput%24output_error%5D%5B1%5D' => 440,
'%5BApp%5CEntity%5CJudgingRunOutput%24output_system%5D%5B1%5D' => 441,
'%5BApp%5CEntity%5CJudgingRunOutput%24metadata%5D%5B1%5D' => 442,
'%5BApp%5CEntity%5CLanguage%5D%5B1%5D' => 443,
'%5BApp%5CEntity%5CLanguage%23setLangid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getLangid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setExtensions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getExtensions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setFilterCompilerFiles%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getFilterCompilerFiles%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setAllowSubmit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getAllowSubmit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setAllowJudge%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getAllowJudge%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setTimeFactor%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getTimeFactor%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setCompileScript%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getCompileScript%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setRequireEntryPoint%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getRequireEntryPoint%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setEntryPointDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getEntryPointDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23setCompileExecutable%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getCompileExecutable%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23addSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23removeSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getSubmissions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%23getAceLanguage%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CLanguage%24langid%5D%5B1%5D' => 444,
'%5BApp%5CEntity%5CLanguage%24externalid%5D%5B1%5D' => 445,
'%5BApp%5CEntity%5CLanguage%24name%5D%5B1%5D' => 446,
'%5BApp%5CEntity%5CLanguage%24extensions%5D%5B1%5D' => 447,
'%5BApp%5CEntity%5CLanguage%24filterCompilerFiles%5D%5B1%5D' => 448,
'%5BApp%5CEntity%5CLanguage%24allowSubmit%5D%5B1%5D' => 449,
'%5BApp%5CEntity%5CLanguage%24allowJudge%5D%5B1%5D' => 450,
'%5BApp%5CEntity%5CLanguage%24timeFactor%5D%5B1%5D' => 451,
'%5BApp%5CEntity%5CLanguage%24compile_script%5D%5B1%5D' => 452,
'%5BApp%5CEntity%5CLanguage%24require_entry_point%5D%5B1%5D' => 453,
'%5BApp%5CEntity%5CLanguage%24entry_point_description%5D%5B1%5D' => 454,
'%5BApp%5CEntity%5CLanguage%24compile_executable%5D%5B1%5D' => 455,
'%5BApp%5CEntity%5CLanguage%24submissions%5D%5B1%5D' => 456,
'%5BApp%5CEntity%5CProblem%5D%5B1%5D' => 457,
'%5BApp%5CEntity%5CProblem%23setProbid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getProbid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setTimelimit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getTimelimit%5D%5B1%5D' => 458,
'%5BApp%5CEntity%5CProblem%23setMemlimit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getMemlimit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setOutputlimit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getOutputlimit%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setSpecialRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getSpecialRun%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setSpecialCompare%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getSpecialCompare%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setSpecialCompareArgs%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getSpecialCompareArgs%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setCombinedRunCompare%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getCombinedRunCompare%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setProblemtext%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setProblemtextFile%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setClearProblemtext%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getProblemtext%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getProblemtextFile%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23isClearProblemtext%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23hasProblemtext%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setProblemtextType%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getProblemtextType%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setCompareExecutable%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getCompareExecutable%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setRunExecutable%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getRunExecutable%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23addTestcase%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23removeTestcase%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getTestcases%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23addContestProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23removeContestProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getContestProblems%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23addSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23removeSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getSubmissions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23addClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23removeClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getClarifications%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23processProblemText%5D%5B1%5D' => 291,
'%5BApp%5CEntity%5CProblem%23setRestrictionLanguages%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getRestrictionLanguages%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setLanguages%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getLanguages%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getSubtask%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setSubtask%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getTaskPoint%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setTaskPoint%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23getProblemsGroup%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%23setProblemsGroup%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CProblem%24probid%5D%5B1%5D' => 459,
'%5BApp%5CEntity%5CProblem%24externalid%5D%5B1%5D' => 460,
'%5BApp%5CEntity%5CProblem%24name%5D%5B1%5D' => 393,
'%5BApp%5CEntity%5CProblem%24timelimit%5D%5B1%5D' => 461,
'%5BApp%5CEntity%5CProblem%24memlimit%5D%5B1%5D' => 462,
'%5BApp%5CEntity%5CProblem%24outputlimit%5D%5B1%5D' => 463,
'%5BApp%5CEntity%5CProblem%24special_run%5D%5B1%5D' => 464,
'%5BApp%5CEntity%5CProblem%24special_compare%5D%5B1%5D' => 465,
'%5BApp%5CEntity%5CProblem%24special_compare_args%5D%5B1%5D' => 466,
'%5BApp%5CEntity%5CProblem%24combined_run_compare%5D%5B1%5D' => 467,
'%5BApp%5CEntity%5CProblem%24problemtext%5D%5B1%5D' => 468,
'%5BApp%5CEntity%5CProblem%24problemtextFile%5D%5B1%5D' => 469,
'%5BApp%5CEntity%5CProblem%24clearProblemtext%5D%5B1%5D' => 412,
'%5BApp%5CEntity%5CProblem%24problemtext_type%5D%5B1%5D' => 470,
'%5BApp%5CEntity%5CProblem%24submissions%5D%5B1%5D' => 471,
'%5BApp%5CEntity%5CProblem%24clarifications%5D%5B1%5D' => 472,
'%5BApp%5CEntity%5CProblem%24contest_problems%5D%5B1%5D' => 473,
'%5BApp%5CEntity%5CProblem%24compare_executable%5D%5B1%5D' => 474,
'%5BApp%5CEntity%5CProblem%24run_executable%5D%5B1%5D' => 475,
'%5BApp%5CEntity%5CProblem%24testcases%5D%5B1%5D' => 476,
'%5BApp%5CEntity%5CProblem%24restriction_languages%5D%5B1%5D' => 477,
'%5BApp%5CEntity%5CProblem%24subtask%5D%5B1%5D' => 478,
'%5BApp%5CEntity%5CProblem%24task_point%5D%5B1%5D' => 479,
'%5BApp%5CEntity%5CProblem%24problems_group%5D%5B1%5D' => 480,
'%5BApp%5CEntity%5CRankCache%5D%5B1%5D' => 481,
'%5BApp%5CEntity%5CRankCache%23setPointsRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23getPointsRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23setTotaltimeRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23getTotaltimeRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23setPointsPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23getPointsPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23setTotaltimePublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23getTotaltimePublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23setTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%23getTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRankCache%24points_restricted%5D%5B1%5D' => 482,
'%5BApp%5CEntity%5CRankCache%24totaltime_restricted%5D%5B1%5D' => 483,
'%5BApp%5CEntity%5CRankCache%24points_public%5D%5B1%5D' => 484,
'%5BApp%5CEntity%5CRankCache%24totaltime_public%5D%5B1%5D' => 485,
'%5BApp%5CEntity%5CRankCache%24contest%5D%5B1%5D' => 486,
'%5BApp%5CEntity%5CRankCache%24team%5D%5B1%5D' => 487,
'%5BApp%5CEntity%5CRejudging%5D%5B1%5D' => 488,
'%5BApp%5CEntity%5CRejudging%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getRejudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23setUseridStart%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getUseridStart%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23setUseridFinish%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getUseridFinish%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23setStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23setEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23setReason%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getReason%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23setValid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getValid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23setStartUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getStartUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23setFinishUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getFinishUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23addJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23removeJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getJudgings%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23addSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23removeSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%23getSubmissions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRejudging%24rejudgingid%5D%5B1%5D' => 489,
'%5BApp%5CEntity%5CRejudging%24userid_start%5D%5B1%5D' => 490,
'%5BApp%5CEntity%5CRejudging%24userid_finish%5D%5B1%5D' => 491,
'%5BApp%5CEntity%5CRejudging%24starttime%5D%5B1%5D' => 492,
'%5BApp%5CEntity%5CRejudging%24endtime%5D%5B1%5D' => 493,
'%5BApp%5CEntity%5CRejudging%24reason%5D%5B1%5D' => 494,
'%5BApp%5CEntity%5CRejudging%24valid%5D%5B1%5D' => 495,
'%5BApp%5CEntity%5CRejudging%24start_user%5D%5B1%5D' => 496,
'%5BApp%5CEntity%5CRejudging%24finish_user%5D%5B1%5D' => 497,
'%5BApp%5CEntity%5CRejudging%24judgings%5D%5B1%5D' => 498,
'%5BApp%5CEntity%5CRejudging%24submissions%5D%5B1%5D' => 499,
'%5BApp%5CEntity%5CRemovedInterval%5D%5B1%5D' => 500,
'%5BApp%5CEntity%5CRemovedInterval%23getIntervalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23setStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23getStarttime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23setEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23getEndtime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23setStarttimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23getStarttimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23setEndtimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23getEndtimeString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRemovedInterval%23validate%5D%5B1%5D' => 292,
'%5BApp%5CEntity%5CRemovedInterval%24intervalid%5D%5B1%5D' => 501,
'%5BApp%5CEntity%5CRemovedInterval%24cid%5D%5B1%5D' => 341,
'%5BApp%5CEntity%5CRemovedInterval%24starttime%5D%5B1%5D' => 502,
'%5BApp%5CEntity%5CRemovedInterval%24endtime%5D%5B1%5D' => 503,
'%5BApp%5CEntity%5CRemovedInterval%24starttimeString%5D%5B1%5D' => 504,
'%5BApp%5CEntity%5CRemovedInterval%24endtimeString%5D%5B1%5D' => 505,
'%5BApp%5CEntity%5CRemovedInterval%24contest%5D%5B1%5D' => 506,
'%5BApp%5CEntity%5CRole%5D%5B1%5D' => 507,
'%5BApp%5CEntity%5CRole%23getRole%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23getRoleid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23setDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23getDescription%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23setDjRole%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23getDjRole%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23addUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23removeUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23getUsers%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%23__toString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CRole%24roleid%5D%5B1%5D' => 508,
'%5BApp%5CEntity%5CRole%24dj_role%5D%5B1%5D' => 509,
'%5BApp%5CEntity%5CRole%24description%5D%5B1%5D' => 510,
'%5BApp%5CEntity%5CRole%24users%5D%5B1%5D' => 511,
'%5BApp%5CEntity%5CScoreCache%5D%5B1%5D' => 512,
'%5BApp%5CEntity%5CScoreCache%23setSubmissionsRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getSubmissionsRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setPendingRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getPendingRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setIsCorrectRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getIsCorrectRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setSolvetimeRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getSolvetimeRestricted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setSubmissionsPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getSubmissionsPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setPendingPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getPendingPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setIsCorrectPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getIsCorrectPublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setSolvetimePublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getSolvetimePublic%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setIsFirstToSolve%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getIsFirstToSolve%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getSubmissions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getPending%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getSolveTime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getIsCorrect%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23getAllTaskPoint%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%23setAllTaskPoint%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CScoreCache%24submissions_restricted%5D%5B1%5D' => 513,
'%5BApp%5CEntity%5CScoreCache%24pending_restricted%5D%5B1%5D' => 514,
'%5BApp%5CEntity%5CScoreCache%24is_correct_restricted%5D%5B1%5D' => 515,
'%5BApp%5CEntity%5CScoreCache%24solvetime_restricted%5D%5B1%5D' => 516,
'%5BApp%5CEntity%5CScoreCache%24submissions_public%5D%5B1%5D' => 517,
'%5BApp%5CEntity%5CScoreCache%24pending_public%5D%5B1%5D' => 518,
'%5BApp%5CEntity%5CScoreCache%24is_correct_public%5D%5B1%5D' => 519,
'%5BApp%5CEntity%5CScoreCache%24solvetime_public%5D%5B1%5D' => 520,
'%5BApp%5CEntity%5CScoreCache%24is_first_to_solve%5D%5B1%5D' => 521,
'%5BApp%5CEntity%5CScoreCache%24contest%5D%5B1%5D' => 486,
'%5BApp%5CEntity%5CScoreCache%24team%5D%5B1%5D' => 487,
'%5BApp%5CEntity%5CScoreCache%24problem%5D%5B1%5D' => 522,
'%5BApp%5CEntity%5CScoreCache%24all_task_point%5D%5B1%5D' => 423,
'%5BApp%5CEntity%5CSubmission%5D%5B1%5D' => 523,
'%5BApp%5CEntity%5CSubmission%23getResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setOrigsubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getOrigsubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getCid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setTeamid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getTeamid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setProbid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getProbid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setLangid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getLangid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getLanguageId%5D%5B1%5D' => 524,
'%5BApp%5CEntity%5CSubmission%23setSubmittime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getSubmittime%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getAbsoluteSubmitTime%5D%5B1%5D' => 258,
'%5BApp%5CEntity%5CSubmission%23getRelativeSubmitTime%5D%5B1%5D' => 259,
'%5BApp%5CEntity%5CSubmission%23setJudgehostAsString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getJudgehostAsString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setJudgehost%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getJudgehost%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setValid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getValid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setRejudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getRejudgingid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setExpectedResults%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getExpectedResults%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setEntryPoint%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getEntryPoint%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23addJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23removeJudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getJudgings%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setLanguage%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getLanguage%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23addFile%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23removeFile%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getFiles%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23addBalloon%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23removeBalloon%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getBalloons%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setContestProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getContestProblem%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setRejudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getRejudging%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getExternalRelationships%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23isAfterFreeze%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getOldResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setOldResult%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getOriginalSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setOriginalSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23addResubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23removeResubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getResubmissions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23isAborted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23isStillBusy%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23addExternalJudgement%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23removeExternalJudgement%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getExternalJudgements%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getInput%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setInput%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23getSubmitType%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%23setSubmitType%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmission%24submitid%5D%5B1%5D' => 525,
'%5BApp%5CEntity%5CSubmission%24externalid%5D%5B1%5D' => 526,
'%5BApp%5CEntity%5CSubmission%24origsubmitid%5D%5B1%5D' => 527,
'%5BApp%5CEntity%5CSubmission%24cid%5D%5B1%5D' => 262,
'%5BApp%5CEntity%5CSubmission%24teamid%5D%5B1%5D' => 528,
'%5BApp%5CEntity%5CSubmission%24probid%5D%5B1%5D' => 529,
'%5BApp%5CEntity%5CSubmission%24langid%5D%5B1%5D' => 530,
'%5BApp%5CEntity%5CSubmission%24submittime%5D%5B1%5D' => 531,
'%5BApp%5CEntity%5CSubmission%24valid%5D%5B1%5D' => 532,
'%5BApp%5CEntity%5CSubmission%24rejudgingid%5D%5B1%5D' => 533,
'%5BApp%5CEntity%5CSubmission%24expected_results%5D%5B1%5D' => 534,
'%5BApp%5CEntity%5CSubmission%24entry_point%5D%5B1%5D' => 535,
'%5BApp%5CEntity%5CSubmission%24judgehost_as_string%5D%5B1%5D' => 536,
'%5BApp%5CEntity%5CSubmission%24judgehost%5D%5B1%5D' => 537,
'%5BApp%5CEntity%5CSubmission%24contest%5D%5B1%5D' => 538,
'%5BApp%5CEntity%5CSubmission%24language%5D%5B1%5D' => 539,
'%5BApp%5CEntity%5CSubmission%24team%5D%5B1%5D' => 540,
'%5BApp%5CEntity%5CSubmission%24problem%5D%5B1%5D' => 541,
'%5BApp%5CEntity%5CSubmission%24contest_problem%5D%5B1%5D' => 542,
'%5BApp%5CEntity%5CSubmission%24judgings%5D%5B1%5D' => 543,
'%5BApp%5CEntity%5CSubmission%24external_judgements%5D%5B1%5D' => 544,
'%5BApp%5CEntity%5CSubmission%24files%5D%5B1%5D' => 545,
'%5BApp%5CEntity%5CSubmission%24balloons%5D%5B1%5D' => 546,
'%5BApp%5CEntity%5CSubmission%24rejudging%5D%5B1%5D' => 547,
'%5BApp%5CEntity%5CSubmission%24originalSubmission%5D%5B1%5D' => 548,
'%5BApp%5CEntity%5CSubmission%24resubmissions%5D%5B1%5D' => 549,
'%5BApp%5CEntity%5CSubmission%24old_result%5D%5B1%5D' => 412,
'%5BApp%5CEntity%5CSubmission%24input%5D%5B1%5D' => 550,
'%5BApp%5CEntity%5CSubmission%24submit_type%5D%5B1%5D' => 551,
'%5BApp%5CEntity%5CSubmissionFile%5D%5B1%5D' => 552,
'%5BApp%5CEntity%5CSubmissionFile%23getSubmitfileid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23setSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23getSubmitid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23setFilename%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23getFilename%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23setRank%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23getRank%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23setSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23getSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23setSourcecode%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%23getSourcecode%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CSubmissionFile%24submitfileid%5D%5B1%5D' => 553,
'%5BApp%5CEntity%5CSubmissionFile%24submitid%5D%5B1%5D' => 554,
'%5BApp%5CEntity%5CSubmissionFile%24filename%5D%5B1%5D' => 555,
'%5BApp%5CEntity%5CSubmissionFile%24rank%5D%5B1%5D' => 556,
'%5BApp%5CEntity%5CSubmissionFile%24submission%5D%5B1%5D' => 557,
'%5BApp%5CEntity%5CSubmissionFile%24sourcecode%5D%5B1%5D' => 558,
'%5BApp%5CEntity%5CTeam%5D%5B1%5D' => 559,
'%5BApp%5CEntity%5CTeam%23setTeamid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getTeamid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setCategoryid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getCategoryid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setAffilid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getAffilid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setEnabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getEnabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setMembers%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getMembers%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setRoom%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getRoom%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setComments%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getComments%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setJudgingLastStarted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getJudgingLastStarted%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setPenalty%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setAddUserForTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getPenalty%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getAddUserForTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setAffiliation%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getAffiliation%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23setCategory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getCategory%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23addContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23removeContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getContests%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23addUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23removeUser%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getUsers%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23addSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23removeSubmission%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getSubmissions%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23addSentClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23removeSentClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getSentClarifications%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23addReceivedClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23removeReceivedClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getReceivedClarifications%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23addUnreadClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23removeUnreadClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getUnreadClarifications%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getGroupIds%5D%5B1%5D' => 560,
'%5BApp%5CEntity%5CTeam%23getAffiliationName%5D%5B1%5D' => 561,
'%5BApp%5CEntity%5CTeam%23getNationality%5D%5B1%5D' => 562,
'%5BApp%5CEntity%5CTeam%23canViewClarification%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23getExternalRelationships%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeam%23validate%5D%5B1%5D' => 292,
'%5BApp%5CEntity%5CTeam%24teamid%5D%5B1%5D' => 563,
'%5BApp%5CEntity%5CTeam%24externalid%5D%5B1%5D' => 564,
'%5BApp%5CEntity%5CTeam%24name%5D%5B1%5D' => 565,
'%5BApp%5CEntity%5CTeam%24categoryid%5D%5B1%5D' => 566,
'%5BApp%5CEntity%5CTeam%24affilid%5D%5B1%5D' => 567,
'%5BApp%5CEntity%5CTeam%24enabled%5D%5B1%5D' => 568,
'%5BApp%5CEntity%5CTeam%24members%5D%5B1%5D' => 569,
'%5BApp%5CEntity%5CTeam%24room%5D%5B1%5D' => 570,
'%5BApp%5CEntity%5CTeam%24comments%5D%5B1%5D' => 571,
'%5BApp%5CEntity%5CTeam%24judging_last_started%5D%5B1%5D' => 572,
'%5BApp%5CEntity%5CTeam%24penalty%5D%5B1%5D' => 573,
'%5BApp%5CEntity%5CTeam%24addUserForTeam%5D%5B1%5D' => 412,
'%5BApp%5CEntity%5CTeam%24affiliation%5D%5B1%5D' => 574,
'%5BApp%5CEntity%5CTeam%24category%5D%5B1%5D' => 575,
'%5BApp%5CEntity%5CTeam%24contests%5D%5B1%5D' => 576,
'%5BApp%5CEntity%5CTeam%24users%5D%5B1%5D' => 577,
'%5BApp%5CEntity%5CTeam%24submissions%5D%5B1%5D' => 578,
'%5BApp%5CEntity%5CTeam%24sent_clarifications%5D%5B1%5D' => 579,
'%5BApp%5CEntity%5CTeam%24received_clarifications%5D%5B1%5D' => 580,
'%5BApp%5CEntity%5CTeam%24unread_clarifications%5D%5B1%5D' => 581,
'%5BApp%5CEntity%5CTeamAffiliation%5D%5B1%5D' => 582,
'%5BApp%5CEntity%5CTeamAffiliation%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23setAffilid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23getAffilid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23setExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23getExternalid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23setShortname%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23getShortname%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23setCountry%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23getCountry%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23setComments%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23getComments%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23addTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23removeTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%23getTeams%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamAffiliation%24affilid%5D%5B1%5D' => 583,
'%5BApp%5CEntity%5CTeamAffiliation%24externalid%5D%5B1%5D' => 584,
'%5BApp%5CEntity%5CTeamAffiliation%24shortname%5D%5B1%5D' => 585,
'%5BApp%5CEntity%5CTeamAffiliation%24name%5D%5B1%5D' => 586,
'%5BApp%5CEntity%5CTeamAffiliation%24country%5D%5B1%5D' => 587,
'%5BApp%5CEntity%5CTeamAffiliation%24comments%5D%5B1%5D' => 588,
'%5BApp%5CEntity%5CTeamAffiliation%24teams%5D%5B1%5D' => 589,
'%5BApp%5CEntity%5CTeamCategory%5D%5B1%5D' => 590,
'%5BApp%5CEntity%5CTeamCategory%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23__toString%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23setCategoryid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23getCategoryid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23setSortorder%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23getSortorder%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23setColor%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23getColor%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23setVisible%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23getVisible%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23addTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23removeTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23getTeams%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23getContests%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23addContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%23removeContest%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CTeamCategory%24categoryid%5D%5B1%5D' => 591,
'%5BApp%5CEntity%5CTeamCategory%24name%5D%5B1%5D' => 295,
'%5BApp%5CEntity%5CTeamCategory%24sortorder%5D%5B1%5D' => 592,
'%5BApp%5CEntity%5CTeamCategory%24color%5D%5B1%5D' => 593,
'%5BApp%5CEntity%5CTeamCategory%24visible%5D%5B1%5D' => 594,
'%5BApp%5CEntity%5CTeamCategory%24teams%5D%5B1%5D' => 595,
'%5BApp%5CEntity%5CTeamCategory%24contests%5D%5B1%5D' => 596,
'%5BApp%5CEntity%5CUser%5D%5B1%5D' => 597,
'%5BApp%5CEntity%5CUser%23getSalt%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23eraseCredentials%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23serialize%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23unserialize%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getUserid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setUsername%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getUsername%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getName%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setEmail%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getEmail%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setLastLogin%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getLastLogin%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getLastLoginObject%5D%5B1%5D' => 598,
'%5BApp%5CEntity%5CUser%23setFirstLogin%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getFirstLogin%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getFirstLoginObject%5D%5B1%5D' => 599,
'%5BApp%5CEntity%5CUser%23setLastIpAddress%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getLastIpAddress%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setPassword%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setPlainPassword%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getPassword%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getPlainPassword%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setIpAddress%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getIpAddress%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setEnabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getEnabled%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setTeamid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getTeamid%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23setTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getTeam%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getTeamName%5D%5B1%5D' => 600,
'%5BApp%5CEntity%5CUser%23__construct%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23addUserRole%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23removeUserRole%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getUserRoles%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%23getRoleList%5D%5B1%5D' => 601,
'%5BApp%5CEntity%5CUser%23getRoles%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CUser%24userid%5D%5B1%5D' => 602,
'%5BApp%5CEntity%5CUser%24username%5D%5B1%5D' => 603,
'%5BApp%5CEntity%5CUser%24name%5D%5B1%5D' => 604,
'%5BApp%5CEntity%5CUser%24email%5D%5B1%5D' => 605,
'%5BApp%5CEntity%5CUser%24last_login%5D%5B1%5D' => 606,
'%5BApp%5CEntity%5CUser%24first_login%5D%5B1%5D' => 607,
'%5BApp%5CEntity%5CUser%24last_ip_address%5D%5B1%5D' => 608,
'%5BApp%5CEntity%5CUser%24password%5D%5B1%5D' => 609,
'%5BApp%5CEntity%5CUser%24plainPassword%5D%5B1%5D' => 412,
'%5BApp%5CEntity%5CUser%24ipAddress%5D%5B1%5D' => 610,
'%5BApp%5CEntity%5CUser%24enabled%5D%5B1%5D' => 611,
'%5BApp%5CEntity%5CUser%24teamid%5D%5B1%5D' => 612,
'%5BApp%5CEntity%5CUser%24team%5D%5B1%5D' => 613,
'%5BApp%5CEntity%5CUser%24user_roles%5D%5B1%5D' => 614,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%5D%5B1%5D' => 1,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23setContainer%5D%5B1%5D' => 1,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainAction%5D%5B1%5D' => 1,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLServerPlatform%5D%5B1%5D' => 1,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOtherPlatform%5D%5B1%5D' => 1,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24container%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23__construct%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23addInsert%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInserts%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCountSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInsertSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getResultSetMapping%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectConditionStatementSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23exists%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCacheRegion%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getEntityHydrator%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeEntityCache%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeJoinedAssociations%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getHash%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandParameters%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandCriteriaParameters%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getClassMetadata%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getManyToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOneToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOwningTable%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23executeInserts%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23load%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadAll%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadById%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23count%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadCriteria%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadManyToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToOneEntity%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23lock%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23refresh%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23buildCollectionCacheKey%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionComplete%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionRolledBack%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23update%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23delete%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24uow%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24metadataFactory%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24persister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24class%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24queuedCache%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24region%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampRegion%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampKey%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24hydrator%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cache%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cacheLogger%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24regionName%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24joinedAssociations%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23getEntityHydrator%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23storeEntityCache%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23getCacheRegion%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getClassMetadata%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getResultSetMapping%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInserts%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInsertSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getCountSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandParameters%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandCriteriaParameters%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectConditionStatementSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23addInsert%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23executeInserts%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23count%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOwningTable%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23load%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadById%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToOneEntity%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23refresh%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadCriteria%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadAll%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getManyToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadManyToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23lock%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOneToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23exists%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionComplete%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionRolledBack%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23delete%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23update%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23updateCache%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%23update%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23__construct%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionComplete%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionRolledBack%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23delete%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23update%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23prepareInsertData%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getDiscriminatorColumnTableName%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectColumnSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectJoinColumnSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23__construct%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassMetadata%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getResultSetMapping%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23addInsert%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInserts%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23executeInserts%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23assignDefaultVersionValue%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23fetchVersionValue%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23extractIdentifierTypes%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23update%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23updateTable%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23deleteJoinTableRecords%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23delete%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareUpdateData%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOwningTable%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23load%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadById%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToOneEntity%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23refresh%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23count%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCriteria%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandCriteriaParameters%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadAll%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadArrayFromStatement%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCollectionFromStatement%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadManyToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyStatement%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getCountSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOrderBySQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnsSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnAssociationSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectManyToManyJoinSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertColumnList%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLTableAlias%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23lock%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getLockTablesSql%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionCriteriaSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementColumnSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToManyCollection%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyStatement%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandParameters%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandToManyParameters%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getTypes%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getValues%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getIndividualValue%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23exists%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getJoinSQLForJoinColumns%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLColumnAlias%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23generateFilterConditionSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23switchPersisterContext%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24class%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24conn%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24platform%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24em%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24queuedInserts%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24columnTypes%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quotedColumns%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quoteStrategy%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24currentPersisterContext%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareInsertData%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24comparisonMap%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24insertSql%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24identifierFlattener%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24limitsHandlingContext%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24noLimitsContext%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%23__construct%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24class%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24rsm%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectColumnListSql%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectJoinSql%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlAliasCounter%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlTableAliases%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24handlesLimits%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getDiscriminatorColumnTableName%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getVersionedClassMetadata%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getOwningTable%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23executeInserts%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23update%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23delete%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getCountSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getLockTablesSql%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectColumnsSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getInsertColumnList%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23assignDefaultVersionValue%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getJoinSql%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24owningTableMap%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24quotedTableMap%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getDiscriminatorColumnTableName%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectColumnsSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getInsertColumnList%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLTableAlias%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionCriteriaSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionDiscriminatorValueSQL%5D%5B1%5D' => 1,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23generateFilterConditionSQL%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAbstractFOSRestController%24viewhandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getName%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getDefault%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getDescription%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getIncompatibilities%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getConstraints%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23isStrict%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%23getKey%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getValue%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24name%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24key%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24default%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24description%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24strict%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24nullable%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractParam%24incompatibles%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%23getConstraints%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%24requirements%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%24map%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CAbstractScalarParam%24allowBlank%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CCopy%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CCopy%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRoute%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setPath%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getPath%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setLocalizedPaths%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getLocalizedPaths%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setHost%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getHost%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setName%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getName%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setRequirements%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getRequirements%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setOptions%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getOptions%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setDefaults%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getDefaults%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setSchemes%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getSchemes%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setMethods%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getMethods%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23setCondition%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CRouting%5CAnnotation%5CRoute%23getCondition%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CDelete%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CDelete%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%23getConstraints%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%23getValue%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%24strict%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%24requirements%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%24image%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CFileParam%24map%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CGet%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CGet%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CHead%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CHead%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CLink%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CLink%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CLock%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CLock%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CMkcol%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CMkcol%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CMove%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CMove%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CNamePrefix%5D%5B1%5D' => 1,
'%5BDoctrine%5CCommon%5CAnnotations%5CAnnotation%23__construct%5D%5B1%5D' => 1,
'%5BDoctrine%5CCommon%5CAnnotations%5CAnnotation%23__get%5D%5B1%5D' => 1,
'%5BDoctrine%5CCommon%5CAnnotations%5CAnnotation%23__set%5D%5B1%5D' => 1,
'%5BDoctrine%5CCommon%5CAnnotations%5CAnnotation%24value%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CNoRoute%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRoute%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5COptions%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5COptions%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getName%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getDefault%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getDescription%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getIncompatibilities%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23getConstraints%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CParamInterface%23isStrict%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPatch%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPatch%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPost%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPost%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPrefix%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPropFind%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPropFind%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPropPatch%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPropPatch%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPut%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CPut%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CQueryParam%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CQueryParam%23getValue%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRequestParam%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRequestParam%23getValue%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRequestParam%24strict%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRoute%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRouteResource%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRouteResource%24resource%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CRouteResource%24pluralize%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CUnlink%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CUnlink%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CUnlock%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CUnlock%23getMethod%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CVersion%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23setTemplateVar%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23getTemplateVar%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23setStatusCode%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23getStatusCode%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23setSerializerGroups%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23getSerializerGroups%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23setPopulateDefaultVars%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23isPopulateDefaultVars%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23setSerializerEnableMaxDepthChecks%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%23getSerializerEnableMaxDepthChecks%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23getVars%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setIsStreamable%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23isStreamable%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setVars%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setValue%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23getTemplate%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setTemplate%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23getAliasName%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23allowArray%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23setOwner%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%23getOwner%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CConfigurationAnnotation%23__construct%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%24templateVar%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%24statusCode%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%24serializerGroups%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%24populateDefaultVars%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CAnnotations%5CView%24serializerEnableMaxDepthChecks%5D%5B1%5D' => 1,
'%5BSensio%5CBundle%5CFrameworkExtraBundle%5CConfiguration%5CTemplate%24template%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CControllerTrait%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CControllerTrait%23setViewHandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CControllerTrait%23getViewHandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CControllerTrait%23view%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CControllerTrait%23redirectView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CControllerTrait%23routeRedirectView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CControllerTrait%23handleView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CControllerTrait%24viewhandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%23__construct%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%23showAction%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%23createView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%23getStatusCode%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%23getTemplateData%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%23getAndCleanOutputBuffering%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%24viewHandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%24exceptionCodes%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CExceptionController%24showException%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CFOSRestController%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CFOSRestController%23getViewHandler%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23getParameter%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23setContainer%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23has%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23get%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23generateUrl%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23forward%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23redirect%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23redirectToRoute%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23json%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23file%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23addFlash%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23isGranted%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23denyAccessUnlessGranted%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23renderView%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23render%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23stream%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23createNotFoundException%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23createAccessDeniedException%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23createForm%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23createFormBuilder%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23getDoctrine%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23getUser%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23isCsrfTokenValid%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23dispatchMessage%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%23addLink%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CFOSRestController%23setViewHandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CFOSRestController%23view%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CFOSRestController%23redirectView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CFOSRestController%23routeRedirectView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CFOSRestController%23handleView%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%24container%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CFOSRestController%24viewhandler%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CTemplatingExceptionController%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CTemplatingExceptionController%23__construct%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CTemplatingExceptionController%23findTemplate%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CTemplatingExceptionController%24templating%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CTwigExceptionController%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CTwigExceptionController%23createView%5D%5B1%5D' => 1,
'%5BFOS%5CRestBundle%5CController%5CTwigExceptionController%23findTemplate%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CDocumentationController%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CDocumentationController%23__construct%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CDocumentationController%23__invoke%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CDocumentationController%24generatorLocator%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CSwaggerUiController%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CSwaggerUiController%23__construct%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CSwaggerUiController%23__invoke%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CSwaggerUiController%24generatorLocator%5D%5B1%5D' => 1,
'%5BNelmio%5CApiDocBundle%5CController%5CSwaggerUiController%24twig%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23redirectAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23urlRedirectAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24router%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpPort%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpsPort%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23templateAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__invoke%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24twig%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24templating%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CExceptionController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CExceptionController%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CExceptionController%23showAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CExceptionController%23getAndCleanOutputBuffering%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CExceptionController%23findTemplate%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CExceptionController%23templateExists%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CExceptionController%24twig%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CExceptionController%24debug%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CPreviewErrorController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CPreviewErrorController%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CPreviewErrorController%23previewErrorPageAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CPreviewErrorController%24kernel%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CTwigBundle%5CController%5CPreviewErrorController%24controller%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%23showAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%23cssAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%23getTemplate%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%23templateExists%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%24twig%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%24debug%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%24profiler%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionController%24fileLinkFormat%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23homeAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23panelAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23toolbarAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchBarAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchResultsAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23phpinfoAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23openAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23getTemplateManager%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23denyAccessIfProfilerDisabled%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23renderWithCspNonces%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templateManager%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24generator%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24profiler%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24twig%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templates%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24cspHandler%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24baseDir%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23panelAction%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23getTraces%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24profiler%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24twig%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24matcher%5D%5B1%5D' => 1,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24routes%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23__construct%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23supports%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23resolve%5D%5B1%5D' => 1,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%24tokenStorage%5D%5B1%5D' => 1,

], [

0 => 'N;',
1 => [],
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/awards',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/awards',
                    'scoreboard_',
                ],
                'name' => [
                    3 => 'Scoreboard',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the current teams qualifying for each award',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[7],
                    $o[6],
                    $o[5],
                ],
                'type' => [
                    3 => 'array',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'ref' => [
                    4 => '#/definitions/Award',
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    5 => 827,
                    827,
                    827,
                ],
                'method' => [
                    5 => 'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    5 => 'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the award for this contest',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[4],
                    $o[3],
                    5 => $o[6],
                ],
                'ref' => [
                    2 => '#/definitions/Award',
                    5 => '#/parameters/id',
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    827,
                    6 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/clarifications',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/clarifications',
                    'clarification_',
                ],
                'name' => [
                    3 => 'Clarifications',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_JUDGEHOST',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the clarifications for this contest',
                    12 => 'Only show clarifications for the given problem',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[9],
                    $o[8],
                    $o[7],
                    $o[6],
                    10 => $o[11],
                    12 => $o[13],
                ],
                'type' => [
                    3 => 'array',
                    5 => 'App\\Entity\\Clarification',
                    12 => 'string',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'ref' => [
                    4 => $o[5],
                    10 => '#/parameters/idlist',
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    827,
                    827,
                    827,
                    11 => 827,
                    13 => 827,
                ],
                'method' => [
                    6 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
                'name' => [
                    12 => 'problem',
                ],
                'in' => [
                    12 => 'query',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[10],
            $o[12],
        ],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_JUDGEHOST',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given clarification for this contest',
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                ],
                '_unmerged' => [
                    2 => [
                        $o[4],
                    ],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
                'type' => [
                    4 => 'App\\Entity\\Clarification',
                ],
                'ref' => [
                    6 => '#/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[6],
        ],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests',
                    'contest_',
                ],
                'name' => [
                    3 => 'Contests',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                ],
                'ref' => [
                    5 => '#/definitions/NotFound',
                    7 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    5 => '404',
                    7 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
        ],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Post')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'consumes' => [
                    2 => [
                        'multipart/form-data',
                    ],
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
                'name' => [
                    4 => 'yaml',
                ],
                'in' => [
                    4 => 'formData',
                ],
                'description' => [
                    4 => 'The contest.yaml files to import.',
                    6 => 'Returns a (currently meaningless) status message.',
                ],
                'required' => [
                    4 => true,
                ],
                'type' => [
                    4 => 'file',
                ],
                'response' => [
                    6 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
            $o[6],
        ],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the active contests',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[8],
                    $o[7],
                    $o[6],
                    $o[5],
                    9 => $o[10],
                ],
                'type' => [
                    2 => 'array',
                    4 => 'App\\Entity\\Contest',
                ],
                'items' => [
                    2 => $o[3],
                ],
                'ref' => [
                    3 => $o[4],
                    9 => '#/parameters/idlist',
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    5 => 827,
                    827,
                    827,
                    827,
                    10 => 827,
                ],
                'method' => [
                    5 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    5 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[9],
        ],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given contest',
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                    5 => $o[6],
                ],
                '_unmerged' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                    6 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    3 => 'App\\Entity\\Contest',
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Patch'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Patch')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}',
                ],
                'methods' => [
                    [
                        'PATCH',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_WRITER',
                ],
            ],
            'stdClass' => [
                'name' => [
                    2 => 'cid',
                    4 => 'id',
                    6 => 'start_time',
                ],
                'in' => [
                    2 => 'path',
                    4 => 'formData',
                    6 => 'formData',
                ],
                'description' => [
                    2 => 'The ID of the contest to change the start time for',
                    4 => 'The ID of the contest to change the start time for',
                    6 => 'The new start time of the contest',
                    8 => 'Contest start time changed successfully',
                    10 => 'Invalid input data',
                    12 => 'Changing start time not allowed',
                ],
                'type' => [
                    2 => 'string',
                    4 => 'string',
                    6 => 'string',
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                    9 => 827,
                    11 => 827,
                    13 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
                'required' => [
                    4 => true,
                    6 => false,
                ],
                'format' => [
                    6 => 'date-time',
                ],
                'allowEmptyValue' => [
                    6 => true,
                ],
                'response' => [
                    8 => '200',
                    10 => '400',
                    12 => '403',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
            $o[6],
            $o[8],
            $o[10],
            $o[12],
        ],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Get')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}/contest-yaml',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'produces' => [
                    1 => [
                        'application/x-yaml',
                    ],
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                    5 => $o[6],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                    6 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'ref' => [
                    3 => '#/parameters/cid',
                ],
                'response' => [
                    5 => '200',
                ],
                'description' => [
                    5 => 'The contest in YAML format',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[5],
        ],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}/state',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'ref' => [
                    1 => '#/parameters/cid',
                    4 => '#/definitions/ContestState',
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[6],
                    $o[5],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    5 => 827,
                    827,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                ],
                'response' => [
                    3 => '200',
                ],
                'description' => [
                    3 => 'The contest state',
                ],
                'schema' => [
                    3 => $o[4],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
        ],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Get')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone $p['Swagger\\Annotations\\Items'],
            clone ($p['Swagger\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Property')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}/event-feed',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'produces' => [
                    1 => [
                        'application/x-ndjson',
                    ],
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    6 => $o[7],
                    8 => $o[11],
                    $o[10],
                    12 => $o[13],
                    14 => $o[15],
                    16 => $o[31],
                    $o[30],
                    $o[29],
                    $o[20],
                    21 => $o[22],
                    23 => $o[24],
                    25 => $o[26],
                    27 => $o[28],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    20 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    22 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    24 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    26 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    28 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    5 => 827,
                    7 => 827,
                    10 => 827,
                    827,
                    13 => 827,
                    15 => 827,
                    20 => 827,
                    22 => 827,
                    24 => 827,
                    26 => 827,
                    28 => 827,
                    827,
                    827,
                    827,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                    10 => 'Annotation',
                    'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    20 => 'Annotation',
                    22 => 'Annotation',
                    24 => 'Annotation',
                    26 => 'Annotation',
                    28 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    20 => 'DocParser',
                    22 => 'DocParser',
                    24 => 'DocParser',
                    26 => 'DocParser',
                    28 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    20 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    24 => 'Doctrine\\Common\\Annotations',
                    26 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    [
                        $o[8],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[14],
                    ],
                    20 => [
                        $o[19],
                    ],
                    22 => [
                        $o[21],
                    ],
                    24 => [
                        $o[23],
                    ],
                    26 => [
                        $o[25],
                    ],
                    28 => [
                        $o[27],
                    ],
                    [
                        $o[18],
                    ],
                    [
                        $o[17],
                    ],
                    [
                        $o[16],
                    ],
                ],
                'ref' => [
                    4 => '#/parameters/cid',
                ],
                'name' => [
                    6 => 'since_id',
                    8 => 'types',
                    12 => 'strict',
                    14 => 'stream',
                ],
                'in' => [
                    6 => 'query',
                    8 => 'query',
                    12 => 'query',
                    14 => 'query',
                ],
                'description' => [
                    6 => 'Only get events after this event',
                    8 => 'Types to filter the event feed on',
                    'A single type',
                    12 => 'Whether to only include CCS compliant properties in the response',
                    14 => 'Whether to stream the output or stop immediately',
                    16 => 'The events',
                ],
                'type' => [
                    6 => 'string',
                    8 => 'array',
                    'string',
                    12 => 'boolean',
                    14 => 'boolean',
                    17 => 'array',
                    'object',
                    'string',
                    21 => 'string',
                    23 => 'string',
                    25 => 'object',
                    27 => 'string',
                ],
                'items' => [
                    8 => $o[9],
                    17 => $o[18],
                ],
                'default' => [
                    12 => 'false',
                    14 => 'true',
                ],
                'response' => [
                    16 => '200',
                ],
                'schema' => [
                    16 => $o[17],
                ],
                'properties' => [
                    18 => [
                        $o[19],
                        $o[21],
                        $o[23],
                        $o[25],
                        $o[27],
                    ],
                ],
                'property' => [
                    19 => 'id',
                    21 => 'type',
                    23 => 'op',
                    25 => 'data',
                    27 => 'time',
                ],
                'format' => [
                    27 => 'date-time',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    3 => [
                        'ROLE_JURY',
                        'ROLE_API_READER',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
            $o[6],
            $o[8],
            $o[12],
            $o[14],
            $o[16],
        ],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Property')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{cid}/status',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_READER',
                ],
            ],
            'stdClass' => [
                'ref' => [
                    2 => '#/parameters/cid',
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[13],
                    $o[12],
                    $o[7],
                    8 => $o[9],
                    10 => $o[11],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    7 => 827,
                    9 => 827,
                    11 => 827,
                    827,
                    827,
                ],
                'method' => [
                    3 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[10],
                    ],
                    [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                ],
                'response' => [
                    4 => '200',
                ],
                'description' => [
                    4 => 'General status information for the given contest',
                ],
                'schema' => [
                    4 => $o[5],
                ],
                'properties' => [
                    5 => [
                        $o[6],
                        $o[8],
                        $o[10],
                    ],
                ],
                'type' => [
                    5 => 'object',
                    'integer',
                    8 => 'integer',
                    10 => 'integer',
                ],
                'property' => [
                    6 => 'num_submissions',
                    8 => 'num_queued',
                    10 => 'num_judging',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
        ],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/executables',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/executables',
                    'executable_',
                ],
                'name' => [
                    3 => 'Executables',
                ],
                '_context' => [
                    3 => $o[4],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    [
                        'ROLE_JURY',
                        'ROLE_JUDGEHOST',
                    ],
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '/{id}',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'ref' => [
                    2 => '#/parameters/id',
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[7],
                    $o[6],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    6 => 827,
                    827,
                ],
                'method' => [
                    3 => 'Annotation',
                    6 => 'Annotation',
                    'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    6 => 'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    6 => [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                ],
                'response' => [
                    4 => '200',
                ],
                'description' => [
                    4 => 'Information about the requested executable',
                    'Base64-encoded executable contents',
                ],
                'schema' => [
                    4 => $o[5],
                ],
                'type' => [
                    5 => 'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
        ],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api',
                    'general_',
                ],
                'name' => [
                    3 => 'General',
                ],
                '_context' => [
                    3 => $o[4],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Property')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/version',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'The current API version information',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[6],
                    $o[5],
                    $o[4],
                ],
                'properties' => [
                    2 => [
                        $o[3],
                    ],
                ],
                'type' => [
                    2 => 'object',
                    'integer',
                ],
                'property' => [
                    3 => 'api_version',
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    827,
                    827,
                ],
                'method' => [
                    4 => 'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone $p['FOS\\RestBundle\\Controller\\Annotations\\Get'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Property')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/info',
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                    [
                        'GET',
                    ],
                ],
                'name' => [
                    1 => 'api_root',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Information about the API and DOMjudge',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[13],
                    $o[12],
                    $o[5],
                    6 => $o[7],
                    8 => $o[9],
                    10 => $o[11],
                ],
                'properties' => [
                    3 => [
                        $o[4],
                        $o[6],
                        $o[8],
                        $o[10],
                    ],
                ],
                'type' => [
                    3 => 'object',
                    'integer',
                    6 => 'string',
                    8 => 'string',
                    10 => 'string',
                ],
                'property' => [
                    4 => 'api_version',
                    6 => 'domjudge_version',
                    8 => 'environment',
                    10 => 'doc_url',
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    5 => 827,
                    7 => 827,
                    9 => 827,
                    11 => 827,
                    827,
                    827,
                ],
                'method' => [
                    5 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    5 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[10],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Swagger\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Property')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/status',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_API_READER',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'General status information for the currently active contests',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[15],
                    $o[14],
                    $o[13],
                    $o[6],
                    7 => $o[8],
                    9 => $o[10],
                    11 => $o[12],
                ],
                'type' => [
                    3 => 'array',
                    'object',
                    'integer',
                    7 => 'integer',
                    9 => 'integer',
                    11 => 'integer',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'properties' => [
                    4 => [
                        $o[5],
                        $o[7],
                        $o[9],
                        $o[11],
                    ],
                ],
                'property' => [
                    5 => 'cid',
                    7 => 'num_submissions',
                    9 => 'num_queued',
                    11 => 'num_judging',
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    8 => 827,
                    10 => 827,
                    12 => 827,
                    827,
                    827,
                    827,
                ],
                'method' => [
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                    12 => [
                        $o[11],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/user',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Information about the logged in user',
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                ],
                '_unmerged' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'type' => [
                    3 => 'App\\Entity\\User',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/config',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'The configuration variables',
                    5 => 'Get only this configuration variable',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[4],
                    $o[3],
                    5 => $o[6],
                ],
                'type' => [
                    2 => 'object',
                    5 => 'string',
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    827,
                    6 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'name' => [
                    5 => 'name',
                ],
                'in' => [
                    5 => 'query',
                ],
                'required' => [
                    5 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/config/check',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Result of the various checks performed',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[5],
                    $o[4],
                ],
                'type' => [
                    3 => 'object',
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    827,
                ],
                'method' => [
                    4 => 'Annotation',
                    'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/groups',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/groups',
                    'group_',
                ],
                'name' => [
                    3 => 'Groups',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'ref' => [
                    1 => '#/parameters/idlist',
                    7 => $o[8],
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                    5 => $o[12],
                    $o[11],
                    $o[10],
                    $o[9],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                    9 => 827,
                    827,
                    827,
                    827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                    9 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                    9 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                    9 => [
                        $o[8],
                    ],
                    [
                        $o[7],
                    ],
                    [
                        $o[6],
                    ],
                    [
                        $o[5],
                    ],
                ],
                'name' => [
                    3 => 'public',
                ],
                'in' => [
                    3 => 'query',
                ],
                'description' => [
                    3 => 'Only show public groups, even for users with more permissions',
                    5 => 'Returns all the groups for this contest',
                ],
                'type' => [
                    3 => 'boolean',
                    6 => 'array',
                    8 => 'App\\Entity\\TeamCategory',
                ],
                'response' => [
                    5 => '200',
                ],
                'schema' => [
                    5 => $o[6],
                ],
                'items' => [
                    6 => $o[7],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[5],
        ],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given group for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                    5 => $o[6],
                ],
                '_unmerged' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                    6 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    3 => 'App\\Entity\\TeamCategory',
                ],
                'ref' => [
                    5 => '#/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/judgehosts',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/judgehosts',
                    'judgehost_',
                ],
                'name' => [
                    3 => 'Judgehosts',
                ],
                '_context' => [
                    3 => $o[4],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The judgehosts',
                    10 => 'Only show the judgehost with the given hostname',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[9],
                    $o[8],
                    $o[7],
                    $o[6],
                    10 => $o[11],
                ],
                'type' => [
                    3 => 'array',
                    5 => 'App\\Entity\\Judgehost',
                    10 => 'string',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'ref' => [
                    4 => $o[5],
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    827,
                    827,
                    827,
                    11 => 827,
                ],
                'method' => [
                    6 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    11 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    11 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    11 => [
                        $o[10],
                    ],
                ],
                'name' => [
                    10 => 'hostname',
                ],
                'in' => [
                    10 => 'query',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[10],
        ],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Swagger\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Property')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The returned unfinished judgings',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[13],
                    $o[12],
                    $o[11],
                    $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'type' => [
                    3 => 'array',
                    'object',
                    'integer',
                    7 => 'integer',
                    9 => 'integer',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'properties' => [
                    4 => [
                        $o[5],
                        $o[7],
                        $o[9],
                    ],
                ],
                'property' => [
                    5 => 'judgingid',
                    7 => 'submitid',
                    9 => 'cid',
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    8 => 827,
                    10 => 827,
                    827,
                    827,
                    827,
                ],
                'method' => [
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{hostname}',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The modified judgehost',
                    10 => 'The hostname of the judgehost to update',
                    12 => 'The new active state of the judgehost',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[9],
                    $o[8],
                    $o[7],
                    $o[6],
                    10 => $o[11],
                    12 => $o[13],
                ],
                'type' => [
                    3 => 'array',
                    5 => 'App\\Entity\\Judgehost',
                    10 => 'string',
                    12 => 'boolean',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'ref' => [
                    4 => $o[5],
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    827,
                    827,
                    827,
                    11 => 827,
                    13 => 827,
                ],
                'method' => [
                    6 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
                'name' => [
                    10 => 'hostname',
                    12 => 'active',
                ],
                'in' => [
                    10 => 'path',
                    12 => 'formData',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[10],
            $o[12],
        ],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/next-judging/{hostname}',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The next judging to judge',
                    6 => 'The hostname of the judgehost to get the next judging for',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[5],
                    $o[4],
                    6 => $o[7],
                ],
                'ref' => [
                    3 => '#/definitions/NextJudging',
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    827,
                    7 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
                'name' => [
                    6 => 'hostname',
                ],
                'in' => [
                    6 => 'path',
                ],
                'type' => [
                    6 => 'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[6],
        ],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Put'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Put')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/update-judging/{hostname}/{judgingId<\\d+>}',
                ],
                'methods' => [
                    [
                        'PUT',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'When the judging has been updated',
                    4 => 'The hostname of the judgehost that wants to update the judging',
                    6 => 'The ID of the judging to update',
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
                'name' => [
                    4 => 'hostname',
                    6 => 'judgingId',
                ],
                'in' => [
                    4 => 'path',
                    6 => 'path',
                ],
                'type' => [
                    4 => 'string',
                    6 => 'integer',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
            $o[6],
        ],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add-judging-run/{hostname}/{judgingId<\\d+>}',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'When the judging run has been added',
                    4 => 'The hostname of the judgehost that wants to add the judging run',
                    6 => 'The ID of the judging to add a run to',
                    8 => 'The ID of the testcase of the run to add',
                    10 => 'The result of the run',
                    12 => 'The runtime of the run',
                    14 => 'The (base64-encoded) output of the run',
                    16 => 'The (base64-encoded) output diff of the run',
                    18 => 'The (base64-encoded) error output of the run',
                    20 => 'The (base64-encoded) system output of the run',
                    22 => 'The (base64-encoded) metadata',
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    14 => $o[15],
                    16 => $o[17],
                    18 => $o[19],
                    20 => $o[21],
                    22 => $o[23],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                    9 => 827,
                    11 => 827,
                    13 => 827,
                    15 => 827,
                    17 => 827,
                    19 => 827,
                    21 => 827,
                    23 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                    23 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                    23 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[16],
                    ],
                    19 => [
                        $o[18],
                    ],
                    21 => [
                        $o[20],
                    ],
                    23 => [
                        $o[22],
                    ],
                ],
                'name' => [
                    4 => 'hostname',
                    6 => 'judgingId',
                    8 => 'testcaseid',
                    10 => 'runresult',
                    12 => 'runtime',
                    14 => 'output_run',
                    16 => 'output_diff',
                    18 => 'output_error',
                    20 => 'output_system',
                    22 => 'metadata',
                ],
                'in' => [
                    4 => 'path',
                    6 => 'path',
                    8 => 'formData',
                    10 => 'formData',
                    12 => 'formData',
                    14 => 'formData',
                    16 => 'formData',
                    18 => 'formData',
                    20 => 'formData',
                    22 => 'formData',
                ],
                'type' => [
                    4 => 'string',
                    6 => 'integer',
                    8 => 'integer',
                    10 => 'string',
                    12 => 'number',
                    14 => 'string',
                    16 => 'string',
                    18 => 'string',
                    20 => 'string',
                    22 => 'string',
                ],
                'format' => [
                    12 => 'float',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
            $o[6],
            $o[8],
            $o[10],
            $o[12],
            $o[14],
            $o[16],
            $o[18],
            $o[20],
            $o[22],
        ],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/internal-error',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JUDGEHOST',
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The ID of the created internal error',
                    6 => 'The description of the internal error',
                    8 => 'The log of the judgehost',
                    10 => 'The object to disable in JSON format',
                    12 => 'The contest ID associated with this internal error',
                    14 => 'The ID of the judging that was being worked on',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[5],
                    $o[4],
                    6 => $o[7],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[13],
                    14 => $o[15],
                ],
                'type' => [
                    3 => 'integer',
                    6 => 'string',
                    8 => 'string',
                    10 => 'string',
                    12 => 'integer',
                    14 => 'integer',
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    827,
                    7 => 827,
                    9 => 827,
                    11 => 827,
                    13 => 827,
                    15 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                    15 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                    15 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[12],
                    ],
                    15 => [
                        $o[14],
                    ],
                ],
                'name' => [
                    6 => 'description',
                    8 => 'judgehostlog',
                    10 => 'disabled',
                    12 => 'cid',
                    14 => 'judgingid',
                ],
                'in' => [
                    6 => 'formData',
                    8 => 'formData',
                    10 => 'formData',
                    12 => 'formData',
                    14 => 'formData',
                ],
                'required' => [
                    6 => true,
                    8 => true,
                    10 => true,
                    12 => false,
                    14 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[6],
            $o[8],
            $o[10],
            $o[12],
            $o[14],
        ],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/judgements',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/judgements',
                    'judgement_',
                ],
                'name' => [
                    3 => 'Judgements',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone $p['Swagger\\Annotations\\Schema'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Schema'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    [
                        'ROLE_JURY',
                        'ROLE_TEAM',
                        'ROLE_JUDGEHOST',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the judgements for this contest',
                    16 => 'Only show judgements with the given result',
                    18 => 'Only show judgements for the given submission',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[13],
                    $o[12],
                    $o[11],
                    $o[8],
                    $o[7],
                    9 => $o[10],
                    14 => $o[15],
                    16 => $o[17],
                    18 => $o[19],
                ],
                'type' => [
                    3 => 'array',
                    6 => 'App\\Entity\\Judging',
                    16 => 'string',
                    18 => 'string',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'allOf' => [
                    4 => [
                        $o[5],
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => $o[6],
                    9 => '#/definitions/JudgementExtraFields',
                    14 => '#/parameters/idlist',
                ],
                'filename' => [
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    7 => 827,
                    827,
                    10 => 827,
                    827,
                    827,
                    827,
                    15 => 827,
                    17 => 827,
                    19 => 827,
                ],
                'method' => [
                    7 => 'Annotation',
                    'Annotation',
                    10 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                ],
                'class' => [
                    7 => 'DocParser',
                    'DocParser',
                    10 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                ],
                'namespace' => [
                    7 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    7 => [
                        $o[6],
                    ],
                    [
                        $o[5],
                    ],
                    10 => [
                        $o[9],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[16],
                    ],
                    19 => [
                        $o[18],
                    ],
                ],
                'name' => [
                    16 => 'result',
                    18 => 'submission_id',
                ],
                'in' => [
                    16 => 'query',
                    18 => 'query',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[16],
            $o[18],
        ],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone $p['Swagger\\Annotations\\Schema'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Schema'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    [
                        'ROLE_JURY',
                        'ROLE_TEAM',
                        'ROLE_JUDGEHOST',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '/{id}',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given judgement for this contest',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[11],
                    $o[10],
                    $o[7],
                    $o[6],
                    8 => $o[9],
                    12 => $o[13],
                ],
                'allOf' => [
                    3 => [
                        $o[4],
                        $o[8],
                    ],
                ],
                'ref' => [
                    4 => $o[5],
                    8 => '#/definitions/JudgementExtraFields',
                    12 => '#/parameters/id',
                ],
                'type' => [
                    5 => 'App\\Entity\\Judging',
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    827,
                    9 => 827,
                    827,
                    827,
                    13 => 827,
                ],
                'method' => [
                    6 => 'Annotation',
                    'Annotation',
                    9 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    13 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    'DocParser',
                    9 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                    9 => [
                        $o[8],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[12],
        ],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/judgement-types',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/judgement-types',
                    'judgement_type_',
                ],
                'name' => [
                    3 => 'Judgement types',
                ],
                '_context' => [
                    3 => $o[4],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the judgement types for this contest',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[6],
                    $o[5],
                    $o[4],
                    7 => $o[8],
                ],
                'type' => [
                    2 => 'array',
                ],
                'items' => [
                    2 => $o[3],
                ],
                'ref' => [
                    3 => '#/definitions/JudgementType',
                    7 => '#/parameters/idlist',
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    827,
                    827,
                    8 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    8 => [
                        $o[7],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
        ],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given judgement type for this contest',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[4],
                    $o[3],
                    5 => $o[6],
                ],
                'ref' => [
                    2 => '#/definitions/JudgementType',
                    5 => '#/parameters/id',
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    827,
                    6 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/languages',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/languages',
                    'language_',
                ],
                'name' => [
                    3 => 'Languages',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the languages for this contest',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[8],
                    $o[7],
                    $o[6],
                    $o[5],
                    9 => $o[10],
                ],
                'type' => [
                    2 => 'array',
                    4 => 'App\\Entity\\Language',
                ],
                'items' => [
                    2 => $o[3],
                ],
                'ref' => [
                    3 => $o[4],
                    9 => '#/parameters/idlist',
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    5 => 827,
                    827,
                    827,
                    827,
                    10 => 827,
                ],
                'method' => [
                    5 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    5 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[9],
        ],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given language for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                    5 => $o[6],
                ],
                '_unmerged' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                    6 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    3 => 'App\\Entity\\Language',
                ],
                'ref' => [
                    5 => '#/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/organizations',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/organizations',
                    'organization_',
                ],
                'name' => [
                    3 => 'Organizations',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the organizations for this contest',
                    11 => 'Only show organizations for the given country',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[8],
                    $o[7],
                    $o[6],
                    $o[5],
                    9 => $o[10],
                    11 => $o[12],
                ],
                'type' => [
                    2 => 'array',
                    4 => 'App\\Entity\\TeamAffiliation',
                    11 => 'string',
                ],
                'items' => [
                    2 => $o[3],
                ],
                'ref' => [
                    3 => $o[4],
                    9 => '#/parameters/idlist',
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    5 => 827,
                    827,
                    827,
                    827,
                    10 => 827,
                    12 => 827,
                ],
                'method' => [
                    5 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                ],
                'class' => [
                    5 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    10 => [
                        $o[9],
                    ],
                    12 => [
                        $o[11],
                    ],
                ],
                'name' => [
                    11 => 'country',
                ],
                'in' => [
                    11 => 'query',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[9],
            $o[11],
        ],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given organization for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                    5 => $o[6],
                ],
                '_unmerged' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                    6 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    3 => 'App\\Entity\\TeamAffiliation',
                ],
                'ref' => [
                    5 => '#/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/problems',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/problems',
                    'problems_',
                ],
                'name' => [
                    3 => 'Problems',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the problems for this contest',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[6],
                    $o[5],
                    $o[4],
                    7 => $o[8],
                ],
                'type' => [
                    2 => 'array',
                ],
                'items' => [
                    2 => $o[3],
                ],
                'ref' => [
                    3 => '#/definitions/ContestProblem',
                    7 => '#/parameters/idlist',
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    827,
                    827,
                    8 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    8 => [
                        $o[7],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[7],
        ],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Post')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Property')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Property'],
            clone $p['Swagger\\Annotations\\Items'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'consumes' => [
                    2 => [
                        'multipart/form-data',
                    ],
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                    8 => $o[19],
                    $o[18],
                    $o[13],
                    $o[12],
                    14 => $o[17],
                    $o[16],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                    12 => 827,
                    827,
                    16 => 827,
                    827,
                    827,
                    827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                    12 => 'Annotation',
                    'Annotation',
                    16 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                    12 => 'DocParser',
                    'DocParser',
                    16 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                    12 => [
                        $o[11],
                    ],
                    [
                        $o[10],
                    ],
                    16 => [
                        $o[15],
                    ],
                    [
                        $o[14],
                    ],
                    [
                        $o[9],
                    ],
                    [
                        $o[8],
                    ],
                ],
                'name' => [
                    4 => 'zip[]',
                    6 => 'problem',
                ],
                'in' => [
                    4 => 'formData',
                    6 => 'formData',
                ],
                'description' => [
                    4 => 'The problem archives to import',
                    6 => 'Optional: problem id to update.',
                    8 => 'Returns the IDs of the imported problems and any messages produced',
                    11 => 'The IDs of the imported problems',
                    15 => 'Messages produced while adding problems',
                ],
                'required' => [
                    4 => true,
                ],
                'type' => [
                    4 => 'file',
                    6 => 'string',
                    9 => 'object',
                    'array',
                    'integer',
                    14 => 'array',
                    'string',
                ],
                'response' => [
                    8 => '200',
                ],
                'schema' => [
                    8 => $o[9],
                ],
                'properties' => [
                    9 => [
                        $o[10],
                        $o[14],
                    ],
                ],
                'property' => [
                    10 => 'problem_ids',
                    14 => 'messages',
                ],
                'items' => [
                    10 => $o[11],
                    14 => $o[15],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
            $o[6],
            $o[8],
        ],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'ref' => [
                    1 => '#/definitions/ContestProblem',
                    3 => '#/parameters/id',
                ],
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given problem for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
        ],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/runs',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/runs',
                    'run_',
                ],
                'name' => [
                    3 => 'Runs',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone $p['Swagger\\Annotations\\Schema'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Schema'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    [
                        'ROLE_JURY',
                        'ROLE_JUDGEHOST',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the runs for this contest',
                    16 => 'Only show runs starting from this ID',
                    18 => 'Only show runs until this ID',
                    20 => 'Only show runs for this judgement',
                    22 => 'Limit the number of returned runs to this amount',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[13],
                    $o[12],
                    $o[11],
                    $o[8],
                    $o[7],
                    9 => $o[10],
                    14 => $o[15],
                    16 => $o[17],
                    18 => $o[19],
                    20 => $o[21],
                    22 => $o[23],
                ],
                'type' => [
                    3 => 'array',
                    6 => 'App\\Entity\\JudgingRun',
                    16 => 'string',
                    18 => 'string',
                    20 => 'string',
                    22 => 'integer',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'allOf' => [
                    4 => [
                        $o[5],
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => $o[6],
                    9 => '#/definitions/RunExtraFields',
                    14 => '#/parameters/idlist',
                ],
                'filename' => [
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    19 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    21 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    23 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    7 => 827,
                    827,
                    10 => 827,
                    827,
                    827,
                    827,
                    15 => 827,
                    17 => 827,
                    19 => 827,
                    21 => 827,
                    23 => 827,
                ],
                'method' => [
                    7 => 'Annotation',
                    'Annotation',
                    10 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                    19 => 'Annotation',
                    21 => 'Annotation',
                    23 => 'Annotation',
                ],
                'class' => [
                    7 => 'DocParser',
                    'DocParser',
                    10 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                    19 => 'DocParser',
                    21 => 'DocParser',
                    23 => 'DocParser',
                ],
                'namespace' => [
                    7 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    21 => 'Doctrine\\Common\\Annotations',
                    23 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    7 => [
                        $o[6],
                    ],
                    [
                        $o[5],
                    ],
                    10 => [
                        $o[9],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[16],
                    ],
                    19 => [
                        $o[18],
                    ],
                    21 => [
                        $o[20],
                    ],
                    23 => [
                        $o[22],
                    ],
                ],
                'name' => [
                    16 => 'first_id',
                    18 => 'last_id',
                    20 => 'judging_id',
                    22 => 'limit',
                ],
                'in' => [
                    16 => 'query',
                    18 => 'query',
                    20 => 'query',
                    22 => 'query',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[16],
            $o[18],
            $o[20],
            $o[22],
        ],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone $p['Swagger\\Annotations\\Schema'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Schema'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    [
                        'ROLE_JURY',
                        'ROLE_JUDGEHOST',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    1 => '/{id}',
                ],
                'methods' => [
                    1 => [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given run for this contest',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[11],
                    $o[10],
                    $o[7],
                    $o[6],
                    8 => $o[9],
                    12 => $o[13],
                ],
                'allOf' => [
                    3 => [
                        $o[4],
                        $o[8],
                    ],
                ],
                'ref' => [
                    4 => $o[5],
                    8 => '#/definitions/RunExtraFields',
                    12 => '#/parameters/id',
                ],
                'type' => [
                    5 => 'App\\Entity\\JudgingRun',
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    827,
                    9 => 827,
                    827,
                    827,
                    13 => 827,
                ],
                'method' => [
                    6 => 'Annotation',
                    'Annotation',
                    9 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    13 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    'DocParser',
                    9 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                    9 => [
                        $o[8],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[12],
        ],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/scoreboard',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/scoreboard',
                    'scoreboard_',
                ],
                'name' => [
                    3 => 'Scoreboard',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the scoreboard',
                    5 => 'Also show invisble teams. Requires jury privileges',
                    7 => 'Get the scoreboard for only this category',
                    9 => 'Get the scoreboard for only this country (in ISO 3166-1 alpha-3 format)',
                    11 => 'Get the scoreboard for only this affiliation',
                    13 => 'Show publicly visible scoreboard, even for users with more permissions',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[4],
                    $o[3],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                    11 => $o[12],
                    13 => $o[14],
                ],
                'ref' => [
                    2 => '#/definitions/Scoreboard',
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                    12 => 827,
                    14 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[13],
                    ],
                ],
                'name' => [
                    5 => 'allteams',
                    7 => 'category',
                    9 => 'country',
                    11 => 'affiliation',
                    13 => 'public',
                ],
                'in' => [
                    5 => 'query',
                    7 => 'query',
                    9 => 'query',
                    11 => 'query',
                    13 => 'query',
                ],
                'type' => [
                    5 => 'boolean',
                    7 => 'integer',
                    9 => 'string',
                    11 => 'integer',
                    13 => 'boolean',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
            $o[7],
            $o[9],
            $o[11],
            $o[13],
        ],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/submissions',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/submissions',
                    'submission_',
                ],
                'name' => [
                    3 => 'Submissions',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone $p['Swagger\\Annotations\\Schema'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Schema'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_JUDGEHOST',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the submissions for this contest',
                    16 => 'Only show submissions for the given language',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[13],
                    $o[12],
                    $o[11],
                    $o[8],
                    $o[7],
                    9 => $o[10],
                    14 => $o[15],
                    16 => $o[17],
                ],
                'type' => [
                    3 => 'array',
                    6 => 'App\\Entity\\Submission',
                    16 => 'string',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'allOf' => [
                    4 => [
                        $o[5],
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => $o[6],
                    9 => '#/definitions/Files',
                    14 => '#/parameters/idlist',
                ],
                'filename' => [
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    15 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    17 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    7 => 827,
                    827,
                    10 => 827,
                    827,
                    827,
                    827,
                    15 => 827,
                    17 => 827,
                ],
                'method' => [
                    7 => 'Annotation',
                    'Annotation',
                    10 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    15 => 'Annotation',
                    17 => 'Annotation',
                ],
                'class' => [
                    7 => 'DocParser',
                    'DocParser',
                    10 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    15 => 'DocParser',
                    17 => 'DocParser',
                ],
                'namespace' => [
                    7 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    15 => 'Doctrine\\Common\\Annotations',
                    17 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    7 => [
                        $o[6],
                    ],
                    [
                        $o[5],
                    ],
                    10 => [
                        $o[9],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    15 => [
                        $o[14],
                    ],
                    17 => [
                        $o[16],
                    ],
                ],
                'name' => [
                    16 => 'language_id',
                ],
                'in' => [
                    16 => 'query',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[14],
            $o[16],
        ],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone $p['Swagger\\Annotations\\Schema'],
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Schema'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_JUDGEHOST',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given submission for this contest',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[11],
                    $o[10],
                    $o[7],
                    $o[6],
                    8 => $o[9],
                    12 => $o[13],
                ],
                'allOf' => [
                    3 => [
                        $o[4],
                        $o[8],
                    ],
                ],
                'ref' => [
                    4 => $o[5],
                    8 => '#/definitions/Files',
                    12 => '#/parameters/id',
                ],
                'type' => [
                    5 => 'App\\Entity\\Submission',
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    827,
                    9 => 827,
                    827,
                    827,
                    13 => 827,
                ],
                'method' => [
                    6 => 'Annotation',
                    'Annotation',
                    9 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    13 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    'DocParser',
                    9 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                    9 => [
                        $o[8],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[12],
        ],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Swagger\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Post')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'stdClass' => [
                'consumes' => [
                    1 => [
                        'multipart/form-data',
                    ],
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    6 => $o[7],
                    8 => $o[9],
                    10 => $o[11],
                    12 => $o[15],
                    $o[14],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    5 => 827,
                    7 => 827,
                    9 => 827,
                    11 => 827,
                    14 => 827,
                    827,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                    11 => 'Annotation',
                    14 => 'Annotation',
                    'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                    11 => 'DocParser',
                    14 => 'DocParser',
                    'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[8],
                    ],
                    11 => [
                        $o[10],
                    ],
                    14 => [
                        $o[13],
                    ],
                    [
                        $o[12],
                    ],
                ],
                'name' => [
                    4 => 'problem',
                    6 => 'language',
                    8 => 'code[]',
                    10 => 'entry_point',
                ],
                'in' => [
                    4 => 'formData',
                    6 => 'formData',
                    8 => 'formData',
                    10 => 'formData',
                ],
                'description' => [
                    4 => 'The problem to submit a solution for',
                    6 => 'The language to submit a solution in',
                    8 => 'The file to submit',
                    10 => 'The entry point for the submission. Required for languages requiring an entry point',
                    12 => 'When submitting was successful',
                    'The ID of the submitted solution',
                ],
                'required' => [
                    4 => true,
                    6 => true,
                    8 => true,
                ],
                'type' => [
                    4 => 'string',
                    6 => 'string',
                    8 => 'file',
                    10 => 'string',
                    13 => 'integer',
                ],
                'response' => [
                    12 => '200',
                ],
                'schema' => [
                    12 => $o[13],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    3 => 'ROLE_TEAM',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
            $o[6],
            $o[8],
            $o[10],
            $o[12],
        ],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Get')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/files',
                ],
                'name' => [
                    'submission_files',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'produces' => [
                    1 => [
                        'application/zip',
                    ],
                ],
                '_context' => [
                    1 => $o[2],
                    4 => $o[5],
                    6 => $o[7],
                    8 => $o[9],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    9 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    5 => 827,
                    7 => 827,
                    9 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                    9 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                    9 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    9 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                    9 => [
                        $o[8],
                    ],
                ],
                'response' => [
                    4 => '200',
                    6 => '500',
                ],
                'description' => [
                    4 => 'The files for the submission as a ZIP archive',
                    6 => 'An error occurred while creating the ZIP file',
                ],
                'ref' => [
                    8 => '#/parameters/id',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    3 => 'ROLE_API_SOURCE_READER',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
            $o[6],
            $o[8],
        ],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}/source-code',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JUDGEHOST',
                        'ROLE_JURY',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'The files for the submission',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[5],
                    $o[4],
                    6 => $o[7],
                ],
                'ref' => [
                    3 => '#/definitions/SourceCodeList',
                    6 => '#/parameters/id',
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    827,
                    7 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[6],
        ],
        []
    );
},
64 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/contests/{cid}/teams',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/contests/{cid}/teams',
                    'team_',
                ],
                'name' => [
                    3 => 'Teams',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                    9 => $o[10],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                    10 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                    10 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                    10 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                    10 => [
                        $o[9],
                    ],
                ],
                'ref' => [
                    5 => '#/parameters/cid',
                    7 => '#/definitions/NotFound',
                    9 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    7 => '404',
                    9 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
            $o[9],
        ],
        []
    );
},
65 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns all the teams for this contest',
                    11 => 'Only show teams for the given category',
                    13 => 'Only show teams for the given affiliation / organization',
                    15 => 'Only show visible teams, even for users with more permissions',
                ],
                'schema' => [
                    1 => $o[2],
                ],
                '_context' => [
                    1 => $o[8],
                    $o[7],
                    $o[6],
                    $o[5],
                    9 => $o[10],
                    11 => $o[12],
                    13 => $o[14],
                    15 => $o[16],
                ],
                'type' => [
                    2 => 'array',
                    4 => 'App\\Entity\\Team',
                    11 => 'string',
                    13 => 'string',
                    15 => 'boolean',
                ],
                'items' => [
                    2 => $o[3],
                ],
                'ref' => [
                    3 => $o[4],
                    9 => '#/parameters/idlist',
                ],
                'filename' => [
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    10 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    12 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    14 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    16 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    5 => 827,
                    827,
                    827,
                    827,
                    10 => 827,
                    12 => 827,
                    14 => 827,
                    16 => 827,
                ],
                'method' => [
                    5 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    10 => 'Annotation',
                    12 => 'Annotation',
                    14 => 'Annotation',
                    16 => 'Annotation',
                ],
                'class' => [
                    5 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    10 => 'DocParser',
                    12 => 'DocParser',
                    14 => 'DocParser',
                    16 => 'DocParser',
                ],
                'namespace' => [
                    5 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    12 => 'Doctrine\\Common\\Annotations',
                    14 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    5 => [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    [
                        $o[1],
                    ],
                    10 => [
                        $o[9],
                    ],
                    12 => [
                        $o[11],
                    ],
                    14 => [
                        $o[13],
                    ],
                    16 => [
                        $o[15],
                    ],
                ],
                'name' => [
                    11 => 'category',
                    13 => 'affiliation',
                    15 => 'public',
                ],
                'in' => [
                    11 => 'query',
                    13 => 'query',
                    15 => 'query',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[9],
            $o[11],
            $o[13],
            $o[15],
        ],
        []
    );
},
66 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    1 => '200',
                ],
                'description' => [
                    1 => 'Returns the given team for this contest',
                ],
                '_context' => [
                    1 => $o[2],
                    3 => $o[4],
                    5 => $o[6],
                ],
                '_unmerged' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'filename' => [
                    2 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    2 => 827,
                    4 => 827,
                    6 => 827,
                ],
                'method' => [
                    2 => 'Annotation',
                    4 => 'Annotation',
                    6 => 'Annotation',
                ],
                'class' => [
                    2 => 'DocParser',
                    4 => 'DocParser',
                    6 => 'DocParser',
                ],
                'namespace' => [
                    2 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    2 => [
                        $o[1],
                    ],
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                ],
                'type' => [
                    3 => 'App\\Entity\\Team',
                ],
                'ref' => [
                    5 => '#/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
        ],
        []
    );
},
67 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Route')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\Prefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Prefix')),
            clone ($p['FOS\\RestBundle\\Controller\\Annotations\\NamePrefix'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\NamePrefix')),
            clone ($p['Swagger\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Tag')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Response'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/api/v4/users',
                ],
                'defaults' => [
                    [
                        '_format' => 'json',
                    ],
                ],
            ],
            'stdClass' => [
                'value' => [
                    1 => '/api/users',
                    'user_',
                ],
                'name' => [
                    3 => 'Users',
                ],
                '_context' => [
                    3 => $o[4],
                    5 => $o[6],
                    7 => $o[8],
                ],
                'filename' => [
                    4 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    8 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    4 => 827,
                    6 => 827,
                    8 => 827,
                ],
                'method' => [
                    4 => 'Annotation',
                    6 => 'Annotation',
                    8 => 'Annotation',
                ],
                'class' => [
                    4 => 'DocParser',
                    6 => 'DocParser',
                    8 => 'DocParser',
                ],
                'namespace' => [
                    4 => 'Doctrine\\Common\\Annotations',
                    6 => 'Doctrine\\Common\\Annotations',
                    8 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    4 => [
                        $o[3],
                    ],
                    6 => [
                        $o[5],
                    ],
                    8 => [
                        $o[7],
                    ],
                ],
                'ref' => [
                    5 => '#/definitions/NotFound',
                    7 => '#/definitions/Unauthorized',
                ],
                'response' => [
                    5 => '404',
                    7 => '401',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[7],
        ],
        []
    );
},
68 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Post')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/groups',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'consumes' => [
                    2 => [
                        'multipart/form-data',
                    ],
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
                'name' => [
                    4 => 'tsv',
                ],
                'in' => [
                    4 => 'formData',
                ],
                'description' => [
                    4 => 'The groups.tsv files to import.',
                    6 => 'Returns a (currently meaningless) status message.',
                ],
                'required' => [
                    4 => true,
                ],
                'type' => [
                    4 => 'file',
                ],
                'response' => [
                    6 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
            $o[6],
        ],
        []
    );
},
69 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Post')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/teams',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'consumes' => [
                    2 => [
                        'multipart/form-data',
                    ],
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
                'name' => [
                    4 => 'tsv',
                ],
                'in' => [
                    4 => 'formData',
                ],
                'description' => [
                    4 => 'The teams2.tsv files to import.',
                    6 => 'Returns a (currently meaningless) status message.',
                ],
                'required' => [
                    4 => true,
                ],
                'type' => [
                    4 => 'file',
                ],
                'response' => [
                    6 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
            $o[6],
        ],
        []
    );
},
70 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Post')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Post')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/accounts',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
            'stdClass' => [
                'consumes' => [
                    2 => [
                        'multipart/form-data',
                    ],
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
                'name' => [
                    4 => 'tsv',
                ],
                'in' => [
                    4 => 'formData',
                ],
                'description' => [
                    4 => 'The accounts.tsv files to import.',
                    6 => 'Returns a (currently meaningless) status message.',
                ],
                'required' => [
                    4 => true,
                ],
                'type' => [
                    4 => 'file',
                ],
                'response' => [
                    6 => '200',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[4],
            $o[6],
        ],
        []
    );
},
71 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Annotations\\Schema'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Schema')),
            clone ($p['Swagger\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Items')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
            clone $p['Swagger\\Annotations\\Parameter'],
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_ADMIN',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns all the users for this contest',
                    12 => 'Only show users for the given team',
                ],
                'schema' => [
                    2 => $o[3],
                ],
                '_context' => [
                    2 => $o[9],
                    $o[8],
                    $o[7],
                    $o[6],
                    10 => $o[11],
                    12 => $o[13],
                ],
                'type' => [
                    3 => 'array',
                    5 => 'App\\Entity\\User',
                    12 => 'string',
                ],
                'items' => [
                    3 => $o[4],
                ],
                'ref' => [
                    4 => $o[5],
                    10 => '#/parameters/idlist',
                ],
                'filename' => [
                    6 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    11 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    13 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    6 => 827,
                    827,
                    827,
                    827,
                    11 => 827,
                    13 => 827,
                ],
                'method' => [
                    6 => 'Annotation',
                    'Annotation',
                    'Annotation',
                    'Annotation',
                    11 => 'Annotation',
                    13 => 'Annotation',
                ],
                'class' => [
                    6 => 'DocParser',
                    'DocParser',
                    'DocParser',
                    'DocParser',
                    11 => 'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    6 => 'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    'Doctrine\\Common\\Annotations',
                    11 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    6 => [
                        $o[5],
                    ],
                    [
                        $o[4],
                    ],
                    [
                        $o[3],
                    ],
                    [
                        $o[2],
                    ],
                    11 => [
                        $o[10],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
                'name' => [
                    12 => 'team_id',
                ],
                'in' => [
                    12 => 'query',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[10],
            $o[12],
        ],
        []
    );
},
72 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['FOS\\RestBundle\\Controller\\Annotations\\Get'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('FOS\\RestBundle\\Controller\\Annotations\\Get')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Swagger\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Response')),
            clone ($p['Swagger\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Context')),
            clone ($p['Nelmio\\ApiDocBundle\\Annotation\\Model'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Nelmio\\ApiDocBundle\\Annotation\\Model')),
            clone $p['Swagger\\Context'],
            clone ($p['Swagger\\Annotations\\Parameter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Swagger\\Annotations\\Parameter')),
            clone $p['Swagger\\Context'],
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id}',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_ADMIN',
                        'ROLE_API_READER',
                    ],
                ],
            ],
            'stdClass' => [
                'response' => [
                    2 => '200',
                ],
                'description' => [
                    2 => 'Returns the given user',
                ],
                '_context' => [
                    2 => $o[3],
                    4 => $o[5],
                    6 => $o[7],
                ],
                '_unmerged' => [
                    2 => [
                        $o[4],
                    ],
                ],
                'filename' => [
                    3 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    5 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                    7 => '/opt/domjudge/domserver/lib/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/DocParser.php',
                ],
                'line' => [
                    3 => 827,
                    5 => 827,
                    7 => 827,
                ],
                'method' => [
                    3 => 'Annotation',
                    5 => 'Annotation',
                    7 => 'Annotation',
                ],
                'class' => [
                    3 => 'DocParser',
                    5 => 'DocParser',
                    7 => 'DocParser',
                ],
                'namespace' => [
                    3 => 'Doctrine\\Common\\Annotations',
                    5 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    3 => [
                        $o[2],
                    ],
                    5 => [
                        $o[4],
                    ],
                    7 => [
                        $o[6],
                    ],
                ],
                'type' => [
                    4 => 'App\\Entity\\User',
                ],
                'ref' => [
                    6 => '#/parameters/id',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[6],
        ],
        []
    );
},
73 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/analysis',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
74 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'analysis_index',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
75 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team/{teamid}',
                ],
                'name' => [
                    'analysis_team',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
76 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problem/{probid}',
                ],
                'name' => [
                    'analysis_problem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
77 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/auditlog',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
78 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_auditlog',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
79 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/balloons',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_BALLOON',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
80 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_balloons',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
81 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{balloonId}/done',
                ],
                'name' => [
                    'jury_balloons_setdone',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
82 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/clarifications',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
83 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_clarifications',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
84 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{id<\\d+>}',
                ],
                'name' => [
                    'jury_clarification',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
85 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/send',
                ],
                'name' => [
                    'jury_clarification_new',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
86 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{clarId<\\d+>}/claim',
                ],
                'name' => [
                    'jury_clarification_claim',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
87 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{clarId<\\d+>}/set-answered',
                ],
                'name' => [
                    'jury_clarification_set_answered',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
88 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{clarId<\\d+>}/change-subject',
                ],
                'name' => [
                    'jury_clarification_change_subject',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
89 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{clarId<\\d+>}/change-queue',
                ],
                'name' => [
                    'jury_clarification_change_queue',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
90 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/send',
                ],
                'name' => [
                    'jury_clarification_send',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
91 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/config',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
92 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_config',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
93 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/check',
                ],
                'name' => [
                    'jury_config_check',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
94 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/check/phpinfo',
                ],
                'name' => [
                    'jury_config_phpinfo',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
95 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/contests',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
96 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_contests',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
97 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}',
                ],
                'name' => [
                    'jury_contest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
98 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/remove-interval/{intervalId}',
                ],
                'name' => [
                    'jury_contest_remove_interval',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
99 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_contest_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
100 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_contest_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
101 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/problems/{probId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_contest_problem_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
102 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_contest_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
103 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{contestId<\\d+>}/finalize',
                ],
                'name' => [
                    'jury_contest_finalize',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
104 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/executables',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
105 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_executables',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
106 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}',
                ],
                'name' => [
                    'jury_executable',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
107 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/content',
                ],
                'name' => [
                    'jury_executable_content',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
108 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/download',
                ],
                'name' => [
                    'jury_executable_download',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
109 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/download/{index}',
                ],
                'name' => [
                    'jury_executable_download_single',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
110 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/edit',
                ],
                'name' => [
                    'jury_executable_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
111 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/delete',
                ],
                'name' => [
                    'jury_executable_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
112 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{execId}/edit-files',
                ],
                'name' => [
                    'jury_executable_edit_files',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
113 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/import-export',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
114 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_import_export',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
115 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contest-yaml',
                ],
                'name' => [
                    'jury_import_export_yaml',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
116 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/export/{type<groups|teams|scoreboard|results>}.tsv',
                ],
                'name' => [
                    'jury_tsv_export',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
117 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/export/{type<results|results-icpc|clarifications>}.html',
                ],
                'name' => [
                    'jury_html_export',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
118 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/internal-errors',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
119 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_internal_errors',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
120 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{errorId<\\d+>}',
                ],
                'name' => [
                    'jury_internal_error',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
121 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{errorId<\\d+>}/{action<ignore|resolve>}',
                ],
                'name' => [
                    'jury_internal_error_handle',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
122 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/judgehosts',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
123 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_judgehosts',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
124 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{hostname}',
                ],
                'name' => [
                    'jury_judgehost',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
125 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{hostname}/delete',
                ],
                'name' => [
                    'jury_judgehost_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
126 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{hostname}/activate',
                ],
                'name' => [
                    'jury_judgehost_activate',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
127 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{hostname}/deactivate',
                ],
                'name' => [
                    'jury_judgehost_deactivate',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
128 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/activate-all',
                ],
                'name' => [
                    'jury_judgehost_activate_all',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
129 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/deactivate-all',
                ],
                'name' => [
                    'jury_judgehost_deactivate_all',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
130 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add/multiple',
                ],
                'name' => [
                    'jury_judgehost_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
131 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/edit/multiple',
                ],
                'name' => [
                    'jury_judgehost_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
132 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/judgehost-restrictions',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
133 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_judgehost_restrictions',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
134 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{restrictionId<\\d+>}',
                ],
                'name' => [
                    'jury_judgehost_restriction',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
135 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{restrictionId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_judgehost_restriction_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
136 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{restrictionId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_judgehost_restriction_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
137 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_judgehost_restriction_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
138 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
139 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_index',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_BALLOON',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
140 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/updates',
                ],
                'name' => [
                    'jury_ajax_updates',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_BALLOON',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
141 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/ajax/{datatype}',
                ],
                'name' => [
                    'jury_ajax_data',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
142 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/refresh-cache',
                ],
                'name' => [
                    'jury_refresh_cache',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
143 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/judging-verifier',
                ],
                'name' => [
                    'jury_judging_verifier',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
144 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/change-contest/{contestId<-?\\d+>}',
                ],
                'name' => [
                    'jury_change_contest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
145 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/languages',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
146 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_languages',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
147 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_language_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
148 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}',
                ],
                'name' => [
                    'jury_language',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
149 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/toggle-submit',
                ],
                'name' => [
                    'jury_language_toggle_submit',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
150 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/toggle-judge',
                ],
                'name' => [
                    'jury_language_toggle_judge',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
151 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/edit',
                ],
                'name' => [
                    'jury_language_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
152 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{langId}/delete',
                ],
                'name' => [
                    'jury_language_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
153 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/print',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => [
                        'ROLE_JURY',
                        'ROLE_BALLOON',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
154 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_print',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
155 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/problems',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
156 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_problems',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
157 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{problemId<\\d+>}/export',
                ],
                'name' => [
                    'jury_export_problem',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
158 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}',
                ],
                'name' => [
                    'jury_problem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
159 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/text',
                ],
                'name' => [
                    'jury_problem_text',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
160 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/testcases',
                ],
                'name' => [
                    'jury_problem_testcases',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
161 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/testcases/{rank<\\d+>}/move/{direction<up|down>}',
                ],
                'name' => [
                    'jury_problem_testcase_move',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
162 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/testcases/{rank<\\d+>}/fetch/{type<input|output|image>}',
                ],
                'name' => [
                    'jury_problem_testcase_fetch',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
163 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_problem_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
164 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_problem_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
165 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_problem_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
166 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/rejudgings',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
167 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_rejudgings',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
168 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{rejudgingId<\\d+>}',
                ],
                'name' => [
                    'jury_rejudging',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
169 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{rejudgingId<\\d+>}/{action<cancel|apply>}',
                ],
                'name' => [
                    'jury_rejudging_finish',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
170 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_rejudging_add',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
171 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/create',
                ],
                'name' => [
                    'jury_create_rejudge',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
172 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/scoreboard',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
173 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_scoreboard',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
174 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/shadow-differences',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
175 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_shadow_differences',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
176 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/submissions',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
177 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_submissions',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
178 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submitId<\\d+>}',
                ],
                'name' => [
                    'jury_submission',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
179 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/by-judging-id/{jid}',
                ],
                'name' => [
                    'jury_submission_by_judging',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
180 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/by-external-id/{externalId}',
                ],
                'name' => [
                    'jury_submission_by_external_id',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
181 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submission}/runs/{contest}/{run}/team-output',
                ],
                'name' => [
                    'jury_submission_team_output',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
182 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submission}/source',
                ],
                'name' => [
                    'jury_submission_source',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
183 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submission}/edit-source',
                ],
                'name' => [
                    'jury_submission_edit_source',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
184 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{submitId<\\d+>}/update-status',
                ],
                'name' => [
                    'jury_submission_update_status',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
185 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{judgingId<\\d+>}/verify',
                ],
                'name' => [
                    'jury_judging_verify',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
186 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/affiliations',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
187 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_team_affiliations',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
188 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{affilId<\\d+>}',
                ],
                'name' => [
                    'jury_team_affiliation',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
189 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{affilId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_team_affiliation_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
190 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{affilId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_team_affiliation_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
191 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_team_affiliation_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
192 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/categories',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
193 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_team_categories',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
194 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{categoryId<\\d+>}',
                ],
                'name' => [
                    'jury_team_category',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
195 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{categoryId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_team_category_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
196 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{categoryId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_team_category_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
197 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_team_category_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
198 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/teams',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
199 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_teams',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
200 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{teamId<\\d+>}',
                ],
                'name' => [
                    'jury_team',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
201 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{teamId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_team_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
202 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{teamId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_team_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
203 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_team_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
204 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/jury/users',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_JURY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
205 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'jury_users',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
206 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{userId<\\d+>}',
                ],
                'name' => [
                    'jury_user',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
207 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{userId<\\d+>}/edit',
                ],
                'name' => [
                    'jury_user_edit',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
208 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{userId<\\d+>}/delete',
                ],
                'name' => [
                    'jury_user_delete',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
209 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/add',
                ],
                'name' => [
                    'jury_user_add',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
210 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/generate-passwords',
                ],
                'name' => [
                    'jury_generate_passwords',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
211 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/public',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
212 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'public_index',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
213 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/change-contest/{contestId<-?\\d+>}',
                ],
                'name' => [
                    'public_change_contest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
214 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team/{teamId<\\d+>}',
                ],
                'name' => [
                    'public_team',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
215 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems',
                ],
                'name' => [
                    'public_problems',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
216 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems/{probId<\\d+>}/text',
                ],
                'name' => [
                    'public_problem_text',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
217 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/sample/{index<\\d+>}/{type<input|output>}',
                ],
                'name' => [
                    'public_problem_sample_testcase',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
218 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/samples.zip',
                ],
                'name' => [
                    'public_problem_sample_zip',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
219 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/homepage',
                ],
                'name' => [
                    'public_homepage',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
220 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
221 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'root',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
222 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/login',
                ],
                'name' => [
                    'login',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
223 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/register',
                ],
                'name' => [
                    'register',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
224 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_TEAM',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    2 => 'user.getTeam() !== null',
                ],
                'message' => [
                    2 => 'You do not have a team associated with your account. ',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
225 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/clarifications/{clarId<\\d+>}',
                ],
                'name' => [
                    'team_clarification',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
226 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/clarifications/add',
                ],
                'name' => [
                    'team_clarification_add',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
227 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '',
                ],
                'name' => [
                    'team_index',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
228 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/change-contest/{contestId<-?\\d+>}',
                ],
                'name' => [
                    'team_change_contest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
229 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/print',
                ],
                'name' => [
                    'team_print',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
230 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/homepage',
                ],
                'name' => [
                    'team_homepage',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
231 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/compile',
                ],
                'name' => [
                    'team_compile',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
232 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/compile_api',
                ],
                'name' => [
                    'team_compile_api',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
233 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_TEAM',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security' => [
                'expression' => [
                    2 => 'user.getTeam() !== null',
                ],
                'message' => [
                    2 => 'You do not have a team associated with your account.',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
234 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems',
                ],
                'name' => [
                    'team_problems',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
235 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problems/{probId<\\d+>}/text',
                ],
                'name' => [
                    'team_problem_text',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
236 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/sample/{index<\\d+>}/{type<input|output>}',
                ],
                'name' => [
                    'team_problem_sample_testcase',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
237 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/{probId<\\d+>}/samples.zip',
                ],
                'name' => [
                    'team_problem_sample_zip',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
238 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/problem_list/{probId<\\d+>}',
                ],
                'name' => [
                    'problemlist',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
239 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/scoreboard',
                ],
                'name' => [
                    'team_scoreboard',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
240 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/team/{teamId<\\d+>}',
                ],
                'name' => [
                    'team_team',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
241 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/submit',
                ],
                'name' => [
                    'team_submit',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
242 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/submission/{submitId<\\d+>}',
                ],
                'name' => [
                    'team_submission',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
243 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'auditlog',
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Log of all actions performed',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
244 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'logid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Audit log ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
245 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'logtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Timestamp of the logentry',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
246 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Contest ID associated to this entry',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
247 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'user',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'User who performed this action',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
248 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'datatype',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Reference to DB table associated to this entry',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
249 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'dataid',
                ],
                'length' => [
                    64,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Identifier in reference table',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
250 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'action',
                ],
                'length' => [
                    64,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Description of action performed',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
251 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'extrainfo',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional additional description of the entry',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
252 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'balloon',
                    'submitid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Balloons to be handed out',
                    ],
                ],
                'columns' => [
                    2 => [
                        'submitid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
253 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'balloonid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Balloon ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
254 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submitid',
                ],
                'type' => [
                    'integer',
                ],
                'options' => [
                    [
                        'comment' => 'Submission for which balloon was earned',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
255 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'done',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Has been handed out yet?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
256 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Submission',
                ],
                'inversedBy' => [
                    'balloons',
                ],
                'name' => [
                    1 => 'submitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
257 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'clarification',
                    'respid',
                    'probid',
                    'cid',
                    'cid_2',
                    'sender',
                    'recipient',
                    'externalid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                        $o[6],
                        $o[7],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[8],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Clarification requests by teams and responses by the jury',
                    ],
                    8 => [
                        'lengths' => [
                            null,
                            '190',
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'respid',
                    ],
                    [
                        'probid',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'cid',
                        'answered',
                        'submittime',
                    ],
                    [
                        'sender',
                    ],
                    [
                        'recipient',
                    ],
                    [
                        'cid',
                        'externalid',
                    ],
                ],
                'fields' => [
                    9 => 'externalid',
                ],
                'groups' => [
                    9 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[9],
        ],
        []
    );
},
258 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
259 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'contest_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
260 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'clarid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Clarification ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
261 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Clarification ID in an external system, should be unique inside a single contest',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
262 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cid',
                ],
                'type' => [
                    'integer',
                ],
                'options' => [
                    [
                        'comment' => 'Contest ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
263 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'respid',
                    'reply_to_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'In reply to clarification ID',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
264 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submittime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time sent',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
265 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'sender',
                    'from_team_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team ID, null means jury',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
266 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'recipient',
                    'to_team_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team ID, null means to jury or to all',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
267 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'jury_member',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Name of jury member who answered this',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
268 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'probid',
                    'problem_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Problem associated to this clarification',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
269 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'category',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Category associated to this clarification; only set for non problem clars',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
270 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'queue',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Queue associated to this clarification',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
271 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'body',
                    'text',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    4294967295,
                ],
                'options' => [
                    [
                        'comment' => 'Clarification text',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
272 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'answered',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Has been answered by jury?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
273 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Problem',
                ],
                'inversedBy' => [
                    'clarifications',
                ],
                'name' => [
                    1 => 'probid',
                ],
                'referencedColumnName' => [
                    1 => 'probid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
274 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'clarifications',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
275 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Clarification',
                ],
                'inversedBy' => [
                    'replies',
                ],
                'name' => [
                    1 => 'respid',
                ],
                'referencedColumnName' => [
                    1 => 'clarid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
276 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'in_reply_to',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
277 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'sent_clarifications',
                ],
                'name' => [
                    1 => 'sender',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
278 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'received_clarifications',
                ],
                'name' => [
                    1 => 'recipient',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
279 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'configuration',
                    'public',
                    'name',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Global configuration variables',
                    ],
                ],
                'columns' => [
                    2 => [
                        'public',
                    ],
                    [
                        'name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
280 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'configid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Configuration ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
281 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'Name of the configuration variable',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
282 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'value',
                ],
                'type' => [
                    'json',
                ],
                'length' => [
                    4294967295,
                ],
                'options' => [
                    [
                        'comment' => 'Content of the configuration variable (JSON encoded)',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
283 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'type',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Type of the value (metatype for use in the webinterface)',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
284 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'public',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Is this variable publicly visible?',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
285 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'category',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'Option category of the configuration variable',
                        'default' => '\'Uncategorized\'',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
286 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Description for in the webinterface',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
287 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone $p['Doctrine\\ORM\\Mapping\\UniqueConstraint'],
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone $p['JMS\\Serializer\\Annotation\\VirtualProperty'],
            clone $p['JMS\\Serializer\\Annotation\\Type'],
            clone ($p['Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'contest',
                    'cid',
                    'externalid',
                    'shortname',
                    'formalName',
                    'string',
                    'penaltyTime',
                    'int',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Contests that will be run with this install',
                    ],
                    3 => [
                        'lengths' => [
                            '190',
                        ],
                    ],
                    [
                        'lengths' => [
                            '190',
                        ],
                    ],
                    [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                        'enabled',
                    ],
                    [
                        'externalid',
                    ],
                    [
                        'shortname',
                    ],
                ],
                'exp' => [
                    5 => 'object.getName()',
                    7 => '0',
                ],
                'fields' => [
                    10 => 'shortname',
                    'externalid',
                ],
                'groups' => [
                    10 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
            $o[7],
            $o[9],
            $o[10],
            $o[11],
        ],
        []
    );
},
288 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'start_time',
                    'DateTime',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
289 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'end_time',
                    'DateTime',
                ],
                'groups' => [
                    3 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
290 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
291 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\PrePersist'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\PrePersist')),
            clone ($p['Doctrine\\ORM\\Mapping\\PreUpdate'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\PreUpdate')),
        ],
        null,
        [],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
292 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\Callback'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Callback')),
        ],
        null,
        [
            'stdClass' => [
                'callback' => [
                    [],
                ],
                'groups' => [
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
293 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'cid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Contest ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
294 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                    2 => 'external_id',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Contest ID in an external system',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
295 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Descriptive name',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
296 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['App\\Validator\\Constraints\\Identifier'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\Identifier')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'shortname',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Short name for this contest',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
297 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'activatetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time contest becomes visible in team/public views',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
298 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time contest starts, submissions accepted',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
299 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime_enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'If disabled, starttime is not used, e.g. to delay contest start',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
300 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'freezetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time scoreboard is frozen',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
301 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time after which no more submissions are accepted',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
302 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'unfreezetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Unfreeze a frozen scoreboard at this time',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
303 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'finalizetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time when contest was finalized, null if not yet',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
304 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'finalizecomment',
                ],
                'type' => [
                    'text',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Comments by the finalizer',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
305 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'b',
                ],
                'type' => [
                    'smallint',
                ],
                'length' => [
                    3,
                ],
                'options' => [
                    [
                        'comment' => 'Number of extra bronze medals',
                        'unsigned' => 'true',
                        'default' => 0,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
306 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'deactivatetime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time contest becomes invisible in team/public views',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
307 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'activatetime_string',
                ],
                'length' => [
                    64,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of activatetime',
                    ],
                ],
                'relativeIsPositive' => [
                    2 => false,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
308 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime_string',
                ],
                'length' => [
                    64,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute (only!) string representation of starttime',
                    ],
                ],
                'allowRelative' => [
                    2 => false,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
309 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'freezetime_string',
                ],
                'length' => [
                    64,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of freezetime',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
310 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime_string',
                ],
                'length' => [
                    64,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of endtime',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
311 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'unfreezetime_string',
                ],
                'length' => [
                    64,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of unfreezetime',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
312 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'deactivatetime_string',
                ],
                'length' => [
                    64,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative absolute or relative string representation of deactivatetime',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
313 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Whether this contest can be active',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
314 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'process_balloons',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Will balloons be processed for this contest?',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
315 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'public',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Is this contest visible for the public?',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
316 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'open_to_all_teams',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Is this contest open to all teams?',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
317 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'contests',
                ],
                'name' => [
                    1 => 'contestteam',
                    'cid',
                    'teamid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                    'teamid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
318 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TeamCategory',
                ],
                'inversedBy' => [
                    'contests',
                ],
                'name' => [
                    1 => 'contestteamcategory',
                    'cid',
                    'categoryid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                    'categoryid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
319 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
320 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
321 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\OrderBy'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OrderBy')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Valid'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Valid')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'ContestProblem',
                ],
                'cascade' => [
                    [
                        'persist',
                    ],
                ],
                'orphanRemoval' => [
                    true,
                ],
                'value' => [
                    1 => [
                        'shortname' => 'ASC',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
322 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'InternalError',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
323 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Valid'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Valid')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest',
                ],
                'targetEntity' => [
                    'App\\Entity\\RemovedInterval',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
324 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone $p['JMS\\Serializer\\Annotation\\VirtualProperty'],
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone $p['JMS\\Serializer\\Annotation\\Type'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'contestproblem',
                    'cid',
                    'probid',
                    'shortname',
                    'id',
                    'string',
                    'short_name',
                    9 => 'string',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Many-to-Many mapping of contests and problems',
                    ],
                    4 => [
                        'lengths' => [
                            null,
                            '190',
                        ],
                    ],
                    [
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                        $o[9],
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                    ],
                    [
                        'probid',
                    ],
                    [
                        'cid',
                        'shortname',
                    ],
                ],
                'exp' => [
                    5 => 'object.getProblem().getProbid()',
                    7 => 'object.getShortname()',
                ],
                'groups' => [
                    8 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
            $o[7],
        ],
        []
    );
},
325 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'shortname',
                    'label',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Unique problem ID within contest, used to sort problems in the scoreboard and typically a single letter',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
326 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThanOrEqual'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThanOrEqual')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'points',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Number of points earned by solving this problem',
                        'unsigned' => true,
                        'default' => '1',
                    ],
                ],
                'value' => [
                    2 => 0,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
327 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_submit',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Are submissions accepted for this problem?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
328 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_judge',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Are submissions for this problem judged?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
329 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'color',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Balloon colour to display on the scoreboard',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
330 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'lazy_eval_results',
                ],
                'type' => [
                    'boolean',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Whether to do lazy evaluation for this problem; if set this overrides the global configuration setting',
                        'unsigned' => 'true',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
331 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Contest',
                ],
                'inversedBy' => [
                    1 => 'problems',
                ],
                'name' => [
                    2 => 'cid',
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
332 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Inline'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Inline')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Problem',
                ],
                'fetch' => [
                    1 => 'EAGER',
                ],
                'inversedBy' => [
                    1 => 'contest_problems',
                ],
                'name' => [
                    2 => 'probid',
                ],
                'referencedColumnName' => [
                    2 => 'probid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
333 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'contest_problem',
                ],
                'targetEntity' => [
                    'App\\Entity\\Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
334 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'event',
                    'eventtime',
                    'cid',
                    'endpoint',
                ],
                'indexes' => [
                    [
                        $o[1],
                        $o[2],
                        $o[3],
                    ],
                ],
                'options' => [
                    [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Log of all events during a contest',
                    ],
                ],
                'columns' => [
                    1 => [
                        'cid',
                        'eventtime',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'cid',
                        'endpointtype',
                        'endpointid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[4],
        ],
        []
    );
},
335 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'eventid',
                ],
                'type' => [
                    1 => 'integer',
                ],
                'length' => [
                    1 => 4,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Event ID',
                        'unsigned' => true,
                    ],
                ],
                'strategy' => [
                    2 => 'IDENTITY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
336 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'eventtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'When the event occurred',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
337 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endpointtype',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'API endpoint associated to this entry',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
338 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endpointid',
                ],
                'length' => [
                    64,
                ],
                'options' => [
                    [
                        'comment' => 'API endpoint (external) ID',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
339 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'action',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'Description of action performed',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
340 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'content',
                ],
                'type' => [
                    'binaryjson',
                ],
                'options' => [
                    [
                        'comment' => 'JSON encoded content of the change, as provided in the event feed',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
341 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Contest ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
342 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'problems',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
343 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'executable',
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Compile, compare, and run script executable bundles',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
344 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['App\\Validator\\Constraints\\Identifier'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\Identifier')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'execid',
                ],
                'length' => [
                    1 => 32,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Executable ID (string)',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
345 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'md5sum',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Md5sum of zip file',
                        'default' => 'NULL',
                        'fixed' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
346 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'zipfile',
                ],
                'type' => [
                    'blob',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Zip file',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
347 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Description of this executable',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
348 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'type',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'Type of executable',
                    ],
                ],
                'choices' => [
                    1 => [
                        'compare',
                        'compile',
                        'run',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
349 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'compile_executable',
                ],
                'targetEntity' => [
                    'Language',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
350 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'compare_executable',
                ],
                'targetEntity' => [
                    'Problem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
351 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'run_executable',
                ],
                'targetEntity' => [
                    'Problem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
352 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'external_judgement',
                    'submitid',
                    'cid',
                    'externalid',
                ],
                'indexes' => [
                    [
                        $o[1],
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    [
                        $o[3],
                    ],
                ],
                'options' => [
                    [
                        'comment' => 'Judgement in external system',
                    ],
                    3 => [
                        'lengths' => [
                            null,
                            '190',
                        ],
                    ],
                ],
                'columns' => [
                    1 => [
                        'submitid',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'cid',
                        'externalid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[4],
        ],
        []
    );
},
353 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'extjudgementid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'options' => [
                    2 => [
                        'comment' => 'External judgement ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
354 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Judgement ID in external system, should be unique inside a single contest',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
355 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'result',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Result string as obtained from external system. null if not finished yet',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
356 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time judging started',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
357 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time judging ended, null = still busy',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
358 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Old external judgement is marked as invalid when receiving a new one',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
359 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Contest',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
360 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submitid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Submission ID being judged by external system',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
361 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Submission',
                ],
                'inversedBy' => [
                    'external_judgements',
                ],
                'name' => [
                    1 => 'submitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
362 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'external_judgement',
                ],
                'targetEntity' => [
                    'ExternalRun',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
363 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'external_run',
                    'extjudgementid',
                    'testcaseid',
                    'externalid',
                ],
                'indexes' => [
                    [
                        $o[1],
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    [
                        $o[3],
                    ],
                ],
                'options' => [
                    [
                        'comment' => 'Run in external system',
                    ],
                    3 => [
                        'lengths' => [
                            null,
                            '190',
                        ],
                    ],
                ],
                'columns' => [
                    1 => [
                        'extjudgementid',
                    ],
                    [
                        'testcaseid',
                    ],
                    [
                        'cid',
                        'externalid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[4],
        ],
        []
    );
},
364 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'extrunid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'External run ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
365 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Run ID in external system, should be unique inside a single contest',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
366 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'result',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'Result string as obtained from external system',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
367 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time run ended',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
368 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'runtime',
                ],
                'type' => [
                    'float',
                ],
                'options' => [
                    [
                        'comment' => 'Running time on this testcase',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
369 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'extjudgementid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Judging ID this run belongs to',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
370 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'ExternalJudgement',
                ],
                'inversedBy' => [
                    'external_runs',
                ],
                'name' => [
                    1 => 'extjudgementid',
                ],
                'referencedColumnName' => [
                    1 => 'extjudgementid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
371 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'testcaseid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Testcase ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
372 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Testcase',
                ],
                'inversedBy' => [
                    'external_runs',
                ],
                'name' => [
                    1 => 'testcaseid',
                ],
                'referencedColumnName' => [
                    1 => 'testcaseid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
373 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'internal_error',
                    'judgingid',
                    'cid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Log of judgehost internal errors',
                    ],
                ],
                'columns' => [
                    2 => [
                        'judgingid',
                    ],
                    [
                        'cid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
374 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'errorid',
                ],
                'type' => [
                    1 => 'integer',
                ],
                'length' => [
                    1 => 4,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Internal error ID',
                        'unsigned' => true,
                    ],
                ],
                'strategy' => [
                    2 => 'IDENTITY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
375 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judgingid',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Judging ID',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
376 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cid',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Contest ID',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
377 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Description of the error',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
378 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judgehostlog',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    65535,
                ],
                'options' => [
                    [
                        'comment' => 'Last N lines of the judgehost log',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
379 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'time',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Timestamp of the internal error',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
380 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'disabled',
                ],
                'type' => [
                    'json',
                ],
                'length' => [
                    65535,
                ],
                'options' => [
                    [
                        'comment' => 'Disabled stuff, JSON-encoded',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
381 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'status',
                ],
                'type' => [
                    'internal_error_status',
                ],
                'options' => [
                    [
                        'comment' => 'Status of internal error',
                        'default' => '\'open\'',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
382 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'internal_errors',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
383 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judging',
                ],
                'name' => [
                    1 => 'judgingid',
                ],
                'referencedColumnName' => [
                    1 => 'judgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
384 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judgehost',
                    'restrictionid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Hostnames of the autojudgers',
                    ],
                ],
                'columns' => [
                    2 => [
                        'restrictionid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
385 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'hostname',
                ],
                'length' => [
                    1 => 64,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Resolvable hostname of judgehost',
                    ],
                ],
                'message' => [
                    2 => 'Invalid hostname. Only characters in [A-Za-z0-9_\\-.] are allowed.',
                ],
                'pattern' => [
                    2 => '/^[A-Za-z0-9_\\-.]*$/',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
386 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'active',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Should this host take on judgings?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
387 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'polltime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time of last poll by autojudger',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
388 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'restrictionid',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional set of restrictions for this judgehost',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
389 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'JudgehostRestriction',
                ],
                'inversedBy' => [
                    'judgehosts',
                ],
                'name' => [
                    1 => 'restrictionid',
                ],
                'referencedColumnName' => [
                    1 => 'restrictionid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
390 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'judgehost',
                ],
                'targetEntity' => [
                    'Judging',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
391 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judgehost_restriction',
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Restrictions for judgehosts',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
392 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'restrictionid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Judgehost restriction ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
393 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Descriptive name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
394 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'restrictions',
                ],
                'type' => [
                    'json',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'JSON-encoded restrictions',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
395 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'restriction',
                ],
                'targetEntity' => [
                    'Judgehost',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
396 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judging',
                    'submitid',
                    'judgehost',
                    'cid',
                    'rejudgingid',
                    'prevjudgingid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                        $o[6],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Result of judging a submission',
                    ],
                ],
                'columns' => [
                    2 => [
                        'submitid',
                    ],
                    [
                        'judgehost',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'rejudgingid',
                    ],
                    [
                        'prevjudgingid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
397 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'start_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
398 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'start_contest_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
399 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'end_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
400 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'end_contest_time',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
401 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'judgingid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Judging ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
402 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Contest ID',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
403 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submitid',
                    'submission_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Submission ID being judged',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
404 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time judging started',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
405 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time judging ended, null = still busy',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
406 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'result',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Result string as defined in config.php',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
407 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'verified',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Result verified by jury member?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
408 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'jury_member',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Name of jury member who verified this',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
409 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'verify_comment',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional additional information provided by the verifier',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
410 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Old judging is marked as invalid when rejudging',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
411 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_compile',
                ],
                'type' => [
                    'blob',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Output of the compiling the program',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
412 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [],
        [
            $o[0],
        ],
        []
    );
},
413 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'seen',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Whether the team has seen this judging',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
414 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'rejudgingid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Rejudging ID (if rejudge)',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
415 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'prevjudgingid',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Previous valid judging (if rejudge)',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
416 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Expose'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Expose')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judgehost',
                    2 => 'judgehost',
                ],
                'length' => [
                    64,
                ],
                'options' => [
                    [
                        'comment' => 'Judgehost that performed the judging',
                    ],
                ],
                'if' => [
                    1 => 'context.getAttribute(\'domjudge_service\').checkrole(\'jury\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
417 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
418 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Submission',
                ],
                'inversedBy' => [
                    'judgings',
                ],
                'name' => [
                    1 => 'submitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
419 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judgehost',
                ],
                'inversedBy' => [
                    'judgings',
                ],
                'name' => [
                    1 => 'judgehost',
                ],
                'referencedColumnName' => [
                    1 => 'hostname',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
420 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Rejudging',
                ],
                'inversedBy' => [
                    'judgings',
                ],
                'name' => [
                    1 => 'rejudgingid',
                ],
                'referencedColumnName' => [
                    1 => 'rejudgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
421 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judging',
                ],
                'name' => [
                    1 => 'prevjudgingid',
                ],
                'referencedColumnName' => [
                    1 => 'judgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
422 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'judging',
                ],
                'targetEntity' => [
                    'JudgingRun',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
423 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'json',
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
424 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judging_run',
                    'judgingid',
                    'testcaseid_2',
                    'testcaseid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Result of a testcase run within a judging',
                    ],
                ],
                'columns' => [
                    2 => [
                        'judgingid',
                    ],
                    [
                        'testcaseid',
                    ],
                    [
                        'judgingid',
                        'testcaseid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
425 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'run_time',
                    'float',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
426 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'ordinal',
                    'int',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
427 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'runid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Run ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
428 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judgingid',
                    'judgement_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Judging ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
429 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'testcaseid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Testcase ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
430 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'runresult',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Result of this run, NULL if not finished yet',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
431 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'runtime',
                ],
                'type' => [
                    'float',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Submission running time on this testcase',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
432 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time run judging ended',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
433 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judging',
                ],
                'inversedBy' => [
                    'runs',
                ],
                'name' => [
                    1 => 'judgingid',
                ],
                'referencedColumnName' => [
                    1 => 'judgingid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
434 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Testcase',
                ],
                'inversedBy' => [
                    'judging_runs',
                ],
                'name' => [
                    1 => 'testcaseid',
                ],
                'referencedColumnName' => [
                    1 => 'testcaseid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
435 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'run',
                ],
                'targetEntity' => [
                    'JudgingRunOutput',
                ],
                'cascade' => [
                    [
                        'persist',
                    ],
                ],
                'orphanRemoval' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
436 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'judging_run_output',
                    'runid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Stores output of judging run',
                    ],
                ],
                'columns' => [
                    2 => [
                        'runid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
437 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'App\\Entity\\JudgingRun',
                ],
                'inversedBy' => [
                    1 => 'output',
                ],
                'name' => [
                    2 => 'runid',
                ],
                'referencedColumnName' => [
                    2 => 'runid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
438 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_run',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Output of running the program',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
439 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_diff',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Diffing the program output and testcase output',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
440 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_error',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Standard error output of the program',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
441 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'output_system',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Judging system output',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
442 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'metadata',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Judging metadata',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
443 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'language',
                    'compile_script',
                    'externalid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Programming languages in which teams can submit solutions',
                    ],
                    3 => [
                        'lengths' => [
                            '190',
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'compile_script',
                    ],
                    [
                        'externalid',
                    ],
                ],
                'fields' => [
                    4 => 'langid',
                    'externalid',
                ],
                'groups' => [
                    4 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
444 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotEqualTo'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotEqualTo')),
            clone ($p['App\\Validator\\Constraints\\Identifier'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\Identifier')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'langid',
                ],
                'length' => [
                    1 => 32,
                ],
                'options' => [
                    1 => [
                        'comment' => 'Language ID (string)',
                    ],
                ],
                'groups' => [
                    3 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'value' => [
                    4 => 'add',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
            $o[5],
        ],
        []
    );
},
445 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                    'id',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'default' => 'NULL',
                        'comment' => 'Language ID to expose in the REST API',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
446 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Descriptive language name',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
447 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'extensions',
                    2 => 'array<string>',
                ],
                'type' => [
                    'json',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'List of recognized extensions (JSON encoded)',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                    3 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
448 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'filter_compiler_files',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Whether to filter the files passed to the compiler by the extension list.',
                        'default' => '1',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
449 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_submit',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Are submissions accepted in this language?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
450 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'allow_judge',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Are submissions in this language judged?',
                        'default' => '1',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
451 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'time_factor',
                    'double',
                ],
                'type' => [
                    'float',
                ],
                'options' => [
                    [
                        'comment' => 'Language-specific factor multiplied by problem run times',
                        'default' => '1',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'value' => [
                    3 => 0,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
452 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'compile_script',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Script to compile source code for this language',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
453 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'require_entry_point',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Whether submissions require a code entry point to be specified.',
                        'default' => '0',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
454 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'entry_point_description',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'The description used in the UI for the entry point field.',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
455 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Executable',
                ],
                'inversedBy' => [
                    'languages',
                ],
                'name' => [
                    1 => 'compile_script',
                ],
                'referencedColumnName' => [
                    1 => 'execid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
456 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'language',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
457 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'problem',
                    'externalid',
                    'special_run',
                    'special_compare',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Problems the teams can submit solutions for',
                    ],
                    [
                        'lengths' => [
                            '190',
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'externalid',
                    ],
                    [
                        'special_run',
                    ],
                    [
                        'special_compare',
                    ],
                ],
                'message' => [
                    6 => 'A problem with the same `externalid` already exists - is this a duplicate?',
                ],
                'fields' => [
                    6 => 'externalid',
                ],
                'groups' => [
                    6 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
            $o[6],
        ],
        []
    );
},
458 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'time_limit',
                    'float',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
459 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'probid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'options' => [
                    2 => [
                        'comment' => 'Problem ID',
                        'unsigned' => 'true',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
460 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Problem ID in an external system, should be unique inside a single contest',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
461 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'timelimit',
                ],
                'type' => [
                    'float',
                ],
                'options' => [
                    [
                        'comment' => 'Maximum run time (in seconds) for this problem',
                        'default' => '0',
                        'unsigned' => 'true',
                    ],
                ],
                'value' => [
                    2 => 0,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
462 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'memlimit',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Maximum memory available (in kB) for this problem',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
                'value' => [
                    2 => 0,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
463 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThan'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThan')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'outputlimit',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Maximum output size (in kB) for this problem',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
                'value' => [
                    2 => 0,
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
464 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'special_run',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Script to run submissions for this problem',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
465 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'special_compare',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Script to compare problem and jury output for this problem',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
466 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'special_compare_args',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional arguments to special_compare script',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
467 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'combined_run_compare',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Use the exit code of the run script to compute the verdict',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
468 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'problemtext',
                ],
                'type' => [
                    'blob',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Problem text in HTML/PDF/ASCII',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
469 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\File'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\File')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'groups' => [
                    [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
470 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'problemtext_type',
                ],
                'length' => [
                    4,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'File type of problem text',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
471 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
472 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
473 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'ContestProblem',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
474 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Executable',
                ],
                'inversedBy' => [
                    'problems_compare',
                ],
                'name' => [
                    1 => 'special_compare',
                ],
                'referencedColumnName' => [
                    1 => 'execid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
475 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Executable',
                ],
                'inversedBy' => [
                    'problems_run',
                ],
                'name' => [
                    1 => 'special_run',
                ],
                'referencedColumnName' => [
                    1 => 'execid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
476 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'problem',
                ],
                'targetEntity' => [
                    'Testcase',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
477 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'restriction_languages',
                ],
                'type' => [
                    'json',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'JSON-encoded restrictions',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
478 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
479 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'task_point',
                ],
                'type' => [
                    'json',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'JSON-encoded restrictions',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
480 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'problems_group',
                ],
                'type' => [
                    'json',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'JSON-encoded restrictions',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
481 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'rankcache',
                    'order_restricted',
                    'order_public',
                    'cid',
                    'teamid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Scoreboard rank cache',
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                        'points_restricted',
                        'totaltime_restricted',
                    ],
                    [
                        'cid',
                        'points_public',
                        'totaltime_public',
                    ],
                    [
                        'cid',
                    ],
                    [
                        'teamid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
482 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'points_restricted',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Total correctness points (restricted audience)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
483 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'totaltime_restricted',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Total penalty time in minutes (restricted audience)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
484 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'points_public',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Total correctness points (public)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
485 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'totaltime_public',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Total penalty time in minutes (public)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
486 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Contest',
                ],
                'name' => [
                    2 => 'cid',
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
487 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Team',
                ],
                'name' => [
                    2 => 'teamid',
                ],
                'referencedColumnName' => [
                    2 => 'teamid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
488 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'rejudging',
                    'userid_start',
                    'userid_finish',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Rejudge group',
                    ],
                ],
                'columns' => [
                    2 => [
                        'userid_start',
                    ],
                    [
                        'userid_finish',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
489 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'rejudgingid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Rejudging ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
490 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'userid_start',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'User ID of user who started the rejudge',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
491 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'userid_finish',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'User ID of user who accepted or canceled the rejudge',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
492 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time rejudging started',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
493 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time rejudging ended, null = still busy',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
494 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'reason',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Reason to start this rejudge',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
495 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Rejudging is marked as invalid if canceled',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
496 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'User',
                ],
                'name' => [
                    1 => 'userid_start',
                ],
                'referencedColumnName' => [
                    1 => 'userid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
497 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'User',
                ],
                'name' => [
                    1 => 'userid_finish',
                ],
                'referencedColumnName' => [
                    1 => 'userid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
498 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'rejudging',
                ],
                'targetEntity' => [
                    'Judging',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
499 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'rejudging',
                ],
                'targetEntity' => [
                    'App\\Entity\\Submission',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
500 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'removed_interval',
                    'cid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Time intervals removed from the contest for scoring',
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
501 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'intervalid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Removed interval ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
502 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Initial time of removed interval',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
503 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Final time of removed interval',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
504 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'starttime_string',
                ],
                'length' => [
                    64,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative (absolute only) string representation of starttime',
                    ],
                ],
                'allowRelative' => [
                    1 => false,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
505 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['App\\Validator\\Constraints\\TimeString'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\TimeString')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'endtime_string',
                ],
                'length' => [
                    64,
                ],
                'options' => [
                    [
                        'comment' => 'Authoritative (absolute only) string representation of endtime',
                    ],
                ],
                'allowRelative' => [
                    1 => false,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
506 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'removedIntervals',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
507 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'role',
                    'role',
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Possible user roles',
                    ],
                ],
                'columns' => [
                    2 => [
                        'role',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
508 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'roleid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Role ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
509 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'role',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'Role name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
510 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Description for the web interface',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
511 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'User',
                ],
                'mappedBy' => [
                    'user_roles',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
512 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'scorecache',
                    'cid',
                    'teamid',
                    'probid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Scoreboard cache',
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                    ],
                    [
                        'teamid',
                    ],
                    [
                        'probid',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
513 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submissions_restricted',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Number of submissions made (restricted audiences)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
514 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'pending_restricted',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Number of submissions pending judgement (restricted audience)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
515 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'is_correct_restricted',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Has there been a correct submission? (restricted audience)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
516 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'solvetime_restricted',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Seconds into contest when problem solved (restricted audience)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
517 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submissions_public',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Number of submissions made (public)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
518 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'pending_public',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Number of submissions pending judgement (public)',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
519 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'is_correct_public',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Has there been a correct submission? (public)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
520 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'solvetime_public',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Seconds into contest when problem solved (public)',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
521 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'is_first_to_solve',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Is this the first solution to this problem?',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
522 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    1 => 'Problem',
                ],
                'name' => [
                    2 => 'probid',
                ],
                'referencedColumnName' => [
                    2 => 'probid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
523 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'submission',
                    'teamid',
                    'judgehost',
                    'teamid_2',
                    'probid',
                    'langid',
                    'judgehost_2',
                    'origsubmitid',
                    'rejudgingid',
                    'probid_2',
                    'externalid',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                        $o[4],
                        $o[5],
                        $o[6],
                        $o[7],
                        $o[8],
                        $o[9],
                        $o[10],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[11],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'All incoming submissions',
                    ],
                    11 => [
                        'lengths' => [
                            null,
                            '190',
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'cid',
                        'teamid',
                    ],
                    [
                        'cid',
                        'judgehost',
                    ],
                    [
                        'teamid',
                    ],
                    [
                        'probid',
                    ],
                    [
                        'langid',
                    ],
                    [
                        'judgehost',
                    ],
                    [
                        'origsubmitid',
                    ],
                    [
                        'rejudgingid',
                    ],
                    [
                        'cid',
                        'probid',
                    ],
                    [
                        'cid',
                        'externalid',
                    ],
                ],
                'fields' => [
                    12 => 'externalid',
                ],
                'groups' => [
                    12 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[12],
        ],
        []
    );
},
524 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'language_id',
                    'string',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
525 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'submitid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Submission ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
526 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Specifies ID of submission if imported from external CCS, e.g. Kattis',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
527 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'origsubmitid',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'If set, specifies original submission in case of edit/resubmit',
                        'default' => 'NULL',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
528 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'teamid',
                    'team_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'options' => [
                    [
                        'comment' => 'Team ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
529 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'probid',
                    'problem_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'options' => [
                    [
                        'comment' => 'Problem ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
530 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'langid',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'Language ID',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
531 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submittime',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'options' => [
                    [
                        'comment' => 'Time submitted',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
532 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'valid',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'If false ignore this submission in all scoreboard calculations',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
533 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'rejudgingid',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Rejudging ID (if rejudge)',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
534 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'expected_results',
                ],
                'type' => [
                    'json',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'JSON encoded list of expected results - used to validate jury submissions',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
535 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Expose'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Expose')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'entry_point',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Optional entry point. Can be used e.g. for java main class.',
                        'default' => 'NULL',
                    ],
                ],
                'if' => [
                    1 => 'context.getAttribute(\'domjudge_service\').checkrole(\'jury\')',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
536 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judgehost',
                ],
                'length' => [
                    64,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Current/last judgehost judging this submission',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
537 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Judgehost',
                ],
                'name' => [
                    1 => 'judgehost',
                ],
                'referencedColumnName' => [
                    1 => 'hostname',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
538 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'cid',
                ],
                'referencedColumnName' => [
                    1 => 'cid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
539 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Language',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'langid',
                ],
                'referencedColumnName' => [
                    1 => 'langid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
540 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'teamid',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
541 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Problem',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'probid',
                ],
                'referencedColumnName' => [
                    1 => 'probid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
542 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\ContestProblem',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'value' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'name' => [
                    2 => 'cid',
                    'probid',
                ],
                'referencedColumnName' => [
                    2 => 'cid',
                    'probid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
543 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'submission',
                ],
                'targetEntity' => [
                    'Judging',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
544 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'submission',
                ],
                'targetEntity' => [
                    'App\\Entity\\ExternalJudgement',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
545 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'submission',
                ],
                'targetEntity' => [
                    'SubmissionFile',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
546 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'submission',
                ],
                'targetEntity' => [
                    'Balloon',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
547 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Rejudging',
                ],
                'inversedBy' => [
                    'submissions',
                ],
                'name' => [
                    1 => 'rejudgingid',
                ],
                'referencedColumnName' => [
                    1 => 'rejudgingid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
548 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Submission',
                ],
                'inversedBy' => [
                    'resubmissions',
                ],
                'name' => [
                    1 => 'origsubmitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
549 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'originalSubmission',
                ],
                'targetEntity' => [
                    'App\\Entity\\Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
550 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'input data',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
551 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submit_type',
                ],
                'type' => [
                    'integer',
                ],
                'options' => [
                    [
                        'comment' => 'If submission is run test form IDE ',
                        'default' => '0',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
552 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone $p['Doctrine\\ORM\\Mapping\\UniqueConstraint'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'submission_file',
                    'submitid',
                    'rank',
                    'filename',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Files associated to a submission',
                    ],
                    4 => [
                        'lengths' => [
                            null,
                            '190',
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'submitid',
                    ],
                    [
                        'submitid',
                        'rank',
                    ],
                    [
                        'submitid',
                        'filename',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
553 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'submitfileid',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Submission file ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
554 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'submitid',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'options' => [
                    [
                        'comment' => 'Submission this file belongs to',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
555 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'filename',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Filename as submitted',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
556 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'rank',
                ],
                'type' => [
                    'integer',
                ],
                'options' => [
                    [
                        'comment' => 'Order of the submission files, zero-indexed',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
557 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Submission',
                ],
                'inversedBy' => [
                    'files',
                ],
                'name' => [
                    1 => 'submitid',
                ],
                'referencedColumnName' => [
                    1 => 'submitid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
558 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'sourcecode',
                ],
                'type' => [
                    'blobtext',
                ],
                'length' => [
                    4294967295,
                ],
                'options' => [
                    [
                        'comment' => 'Full source code',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
559 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team',
                    'affilid',
                    'categoryid',
                    'externalid',
                    'externalid_nonstrict',
                    'externalid',
                    'string',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[4],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                    ],
                    4 => [
                        'lengths' => [
                            '190',
                        ],
                    ],
                    [
                        $o[6],
                        $o[7],
                        $o[8],
                    ],
                ],
                'columns' => [
                    2 => [
                        'affilid',
                    ],
                    [
                        'categoryid',
                    ],
                    [
                        'externalid',
                    ],
                ],
                'exp' => [
                    5 => 'object.getExternalId()',
                ],
                'groups' => [
                    8 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                ],
                'fields' => [
                    9 => 'externalid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[5],
            $o[9],
        ],
        []
    );
},
560 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'array<string>',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
561 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'affiliation',
                    'string',
                ],
                'groups' => [
                    3 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
562 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['JMS\\Serializer\\Annotation\\Expose'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Expose')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'string',
                ],
                'groups' => [
                    2 => [
                        'Nonstrict',
                    ],
                ],
                'if' => [
                    3 => 'context.getAttribute(\'domjudge_service\').dbconfig_get(\'show_flags\', true)',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
563 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'teamid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Team ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
564 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                    'icpc_id',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team ID in an external system',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
565 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Team name',
                        'collation' => 'utf8mb4_bin',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
566 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'categoryid',
                ],
                'type' => [
                    'integer',
                ],
                'options' => [
                    [
                        'comment' => 'Team category ID',
                        'unsigned' => 'true',
                        'default' => 0,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
567 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'affilid',
                    'organization_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team affiliation ID',
                        'unsigned' => 'true',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
568 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Whether the team is visible and operational',
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
569 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'members',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team member names (freeform)',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
570 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'room',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Physical location of team',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
571 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'comments',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Comments about this team',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
572 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'judging_last_started',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Start time of last judging for priorization',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
573 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'penalty',
                ],
                'type' => [
                    'integer',
                ],
                'options' => [
                    [
                        'comment' => 'Additional penalty time in minutes',
                        'default' => 0,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
574 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'TeamAffiliation',
                ],
                'inversedBy' => [
                    'teams',
                ],
                'name' => [
                    1 => 'affilid',
                ],
                'referencedColumnName' => [
                    1 => 'affilid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
575 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'TeamCategory',
                ],
                'inversedBy' => [
                    'teams',
                ],
                'name' => [
                    1 => 'categoryid',
                ],
                'referencedColumnName' => [
                    1 => 'categoryid',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
576 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'mappedBy' => [
                    'teams',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
577 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Valid'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Valid')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'team',
                ],
                'targetEntity' => [
                    'User',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
578 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'team',
                ],
                'targetEntity' => [
                    'Submission',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
579 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'sender',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
580 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'recipient',
                ],
                'targetEntity' => [
                    'Clarification',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
581 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Clarification',
                ],
                'name' => [
                    1 => 'team_unread',
                    'teamid',
                    'mesgid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'teamid',
                    'clarid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
582 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone $p['JMS\\Serializer\\Annotation\\VirtualProperty'],
            clone $p['JMS\\Serializer\\Annotation\\Type'],
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team_affiliation',
                    'externalid',
                    'icpcId',
                    'string',
                    'shortName',
                    'string',
                    'shortname',
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Affilitations for teams (e.g.: university, company)',
                    ],
                    [
                        'lengths' => [
                            '190',
                        ],
                    ],
                    [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                        $o[7],
                        $o[8],
                    ],
                ],
                'columns' => [
                    2 => [
                        'externalid',
                    ],
                ],
                'exp' => [
                    3 => 'object.getAffilid()',
                    5 => 'object.getShortname()',
                ],
                'groups' => [
                    8 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                ],
                'fields' => [
                    9 => 'externalid',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[5],
            $o[9],
        ],
        []
    );
},
583 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'affilid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Team affiliation ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
584 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'externalid',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team affiliation ID in an external system',
                        'collation' => 'utf8mb4_bin',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
585 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'shortname',
                    'name',
                ],
                'length' => [
                    32,
                ],
                'options' => [
                    [
                        'comment' => 'Short descriptive name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
586 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                    'formal_name',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Descriptive name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
587 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Expose'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Expose')),
            clone ($p['App\\Validator\\Constraints\\Country'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('App\\Validator\\Constraints\\Country')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'country',
                ],
                'length' => [
                    3,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'ISO 3166-1 alpha-3 country code',
                        'default' => 'NULL',
                        'fixed' => true,
                    ],
                ],
                'if' => [
                    1 => 'context.getAttribute(\'domjudge_service\').dbconfig_get(\'show_flags\', true)',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
588 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'comments',
                ],
                'type' => [
                    'text',
                ],
                'length' => [
                    4294967295,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Comments',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
589 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'affiliation',
                ],
                'targetEntity' => [
                    'Team',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
590 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone $p['JMS\\Serializer\\Annotation\\VirtualProperty'],
            clone $p['JMS\\Serializer\\Annotation\\Type'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team_category',
                    'sortorder',
                    'hidden',
                    'boolean',
                    'icpc_id',
                    'string',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Categories for teams (e.g.: participants, observers, ...)',
                    ],
                    3 => [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                ],
                'columns' => [
                    2 => [
                        'sortorder',
                    ],
                ],
                'exp' => [
                    3 => '!object.getVisible()',
                    5 => 'object.getCategoryid()',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[5],
        ],
        []
    );
},
591 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'categoryid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'Team category ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
592 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\GreaterThanOrEqual'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\GreaterThanOrEqual')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'sortorder',
                ],
                'type' => [
                    'tinyint',
                ],
                'length' => [
                    1,
                ],
                'options' => [
                    [
                        'comment' => 'Where to sort this category on the scoreboard',
                        'unsigned' => true,
                        'default' => '0',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                    [
                        'Default',
                    ],
                ],
                'message' => [
                    2 => 'Only non-negative sortorders are supported',
                ],
                'value' => [
                    2 => 0,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
593 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'color',
                ],
                'length' => [
                    32,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Background colour on the scoreboard',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
594 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'visible',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Are teams in this category visible?',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
595 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'category',
                ],
                'targetEntity' => [
                    'Team',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
596 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Contest',
                ],
                'mappedBy' => [
                    'team_categories',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
597 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'user',
                    'teamid',
                    'username',
                ],
                'indexes' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'uniqueConstraints' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'options' => [
                    1 => [
                        'collate' => 'utf8mb4_unicode_ci',
                        'charset' => 'utf8mb4',
                        'comment' => 'Users that have access to DOMjudge',
                    ],
                    3 => [
                        'lengths' => [
                            '190',
                        ],
                    ],
                ],
                'columns' => [
                    2 => [
                        'teamid',
                    ],
                    [
                        'username',
                    ],
                ],
                'message' => [
                    4 => 'This username is already in use.',
                ],
                'fields' => [
                    4 => 'username',
                ],
                'groups' => [
                    4 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},
598 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'last_login_time',
                    'DateTime',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
599 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'first_login_time',
                    'DateTime',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
600 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
            clone ($p['JMS\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'team',
                    'string',
                ],
                'groups' => [
                    3 => [
                        'Nonstrict',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
601 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    1 => 'roles',
                    'array<string>',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
602 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    2 => 'userid',
                    'id',
                    'string',
                ],
                'type' => [
                    2 => 'integer',
                ],
                'length' => [
                    2 => 4,
                ],
                'options' => [
                    2 => [
                        'comment' => 'User ID',
                        'unsigned' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
603 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'username',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'User login name',
                    ],
                ],
                'message' => [
                    1 => 'Only alphanumeric characters and _-@. are allowed',
                ],
                'pattern' => [
                    1 => '/^[a-z0-9@._-]+$/i',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
604 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'length' => [
                    255,
                ],
                'options' => [
                    [
                        'comment' => 'Name',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
605 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'email',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Email address',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
606 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'last_login',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time of last successful login',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
607 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'first_login',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    32,
                ],
                'scale' => [
                    9,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Time of first login',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
608 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'last_ip_address',
                    'last_ip',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Last IP address of successful login',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
609 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'password',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Password hash',
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
610 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Ip'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Ip')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ip_address',
                    'ip',
                ],
                'length' => [
                    255,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'IP Address used to autologin',
                        'default' => 'NULL',
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
611 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'options' => [
                    [
                        'comment' => 'Whether the user is able to log in',
                        'default' => '1',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
612 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['JMS\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\SerializedName')),
            clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'teamid',
                    'team_id',
                    'string',
                ],
                'type' => [
                    'integer',
                ],
                'length' => [
                    4,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'comment' => 'Team associated with',
                        'unsigned' => true,
                        'default' => 'NULL',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
613 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Team',
                ],
                'inversedBy' => [
                    'users',
                ],
                'name' => [
                    1 => 'teamid',
                ],
                'referencedColumnName' => [
                    1 => 'teamid',
                ],
                'onDelete' => [
                    1 => 'SET NULL',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
614 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['JMS\\Serializer\\Annotation\\Exclude'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Exclude')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Role',
                ],
                'inversedBy' => [
                    'users',
                ],
                'name' => [
                    1 => 'userrole',
                    'userid',
                    'roleid',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'userid',
                    'roleid',
                ],
                'onDelete' => [
                    2 => 'CASCADE',
                    'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
        ],
        []
    );
},

]];
